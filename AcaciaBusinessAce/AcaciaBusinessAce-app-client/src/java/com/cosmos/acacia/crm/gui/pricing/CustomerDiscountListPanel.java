/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomerDiscountListPanel.java
 *
 * Created on 2009-3-3, 18:25:55
 */

package com.cosmos.acacia.crm.gui.pricing;

import com.cosmos.acacia.crm.bl.pricing.CustomerDiscountRemote;
import com.cosmos.acacia.crm.data.BusinessPartner;
import com.cosmos.acacia.crm.data.customer.CustomerDiscount;
import com.cosmos.acacia.gui.AbstractTablePanel;
import com.cosmos.acacia.gui.AcaciaPanel;
import com.cosmos.acacia.gui.BaseEntityPanel;
import com.cosmos.acacia.gui.EntityFormButtonPanel;
import com.cosmos.swingb.DialogResponse;
import java.awt.BorderLayout;
import javax.ejb.EJB;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author Miro
 */
public class CustomerDiscountListPanel extends BaseEntityPanel {

    /** Creates new form CustomerDiscountListPanel */
    public CustomerDiscountListPanel(BusinessPartner customer) {
        super(customer.getId());
        this.customer = customer;
        init();
    }

    public CustomerDiscountListPanel() {
        super(null);
        init();
    }

    @Override
    protected void init()
    {
        initComponents();
        super.init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @EJB
    private static CustomerDiscountRemote formSession;
    private EntityFormButtonPanel entityFormButtonPanel;
    private BusinessPartner customer;
    private CustomerDiscount customerDiscount;
    private BindingGroup bindingGroup;
    private CustomerDiscountPanel customerDiscountPanel;
    private CustomerDiscountItemListPanel customerDiscountItemListPanel;

    @Override
    protected void initData() {
        setLayout(new BorderLayout());
        add(getCustomerDiscountPanel(), BorderLayout.BEFORE_FIRST_LINE);
        add(getCustomerDiscountItemListPanel(), BorderLayout.CENTER);
        add(getButtonPanel(), BorderLayout.AFTER_LINE_ENDS);
    }

    public CustomerDiscount getCustomerDiscount() {
        if(customerDiscount == null) {
            if((customerDiscount = getFormSession().getCustomerDiscount(customer)) == null) {
                customerDiscount = getFormSession().newCustomerDiscount(customer);
            }
        }

        return customerDiscount;
    }

    @Override
    public void performSave(boolean closeAfter) {
        try {
            customerDiscount = getFormSession().saveCustomerDiscount(getCustomerDiscount());
            if(closeAfter) {
                setDialogResponse(DialogResponse.SAVE);
                setSelectedValue(customerDiscount);
                close();
            }
        } catch (Exception ex) {
            handleException("customerDiscount: " + customerDiscount, ex);
        }
    }

    @Override
    public BindingGroup getBindingGroup() {
        if(bindingGroup == null) {
            bindingGroup = new BindingGroup();
        }

        return bindingGroup;
    }

    @Override
    public Object getEntity() {
        return getCustomerDiscount();
    }

    @Override
    public EntityFormButtonPanel getButtonPanel() {
        if(entityFormButtonPanel == null) {
            entityFormButtonPanel = new EntityFormButtonPanel();
        }

        return entityFormButtonPanel;
    }

    private String getResourceString(String key) {
        return getResourceMap().getString(key);
    }

    private CustomerDiscountRemote getFormSession()
    {
        if(formSession == null)
        {
            formSession = getBean(CustomerDiscountRemote.class);
        }

        return formSession;
    }

    private CustomerDiscountPanel getCustomerDiscountPanel() {
        if(customerDiscountPanel == null) {
            customerDiscountPanel = new CustomerDiscountPanel();
        }

        return customerDiscountPanel;
    }

    private CustomerDiscountItemListPanel getCustomerDiscountItemListPanel() {
        if(customerDiscountItemListPanel == null) {
            customerDiscountItemListPanel = new CustomerDiscountItemListPanel();
        }

        return customerDiscountItemListPanel;
    }

    private class CustomerDiscountPanel extends AcaciaPanel {

        public CustomerDiscountPanel() {
            initData();
        }

        @Override
        protected void initData() {
        }

    }

    private class CustomerDiscountItemListPanel extends AbstractTablePanel {

        public CustomerDiscountItemListPanel() {
        }

        @Override
        protected boolean deleteRow(Object rowObject) {
            return false;
        }

        @Override
        protected Object modifyRow(Object rowObject) {
            return null;
        }

        @Override
        protected Object newRow() {
            return null;
        }
    }
}
