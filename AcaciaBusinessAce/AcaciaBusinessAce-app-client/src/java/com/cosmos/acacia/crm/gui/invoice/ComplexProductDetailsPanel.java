package com.cosmos.acacia.crm.gui.invoice;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;

import org.jdesktop.swingx.treetable.DefaultMutableTreeTableNode;
import org.jdesktop.swingx.treetable.DefaultTreeTableModel;

import com.cosmos.acacia.crm.bl.assembling.AssemblingRemote;
import com.cosmos.acacia.crm.data.ComplexProduct;
import com.cosmos.acacia.crm.gui.ProductItemTreeTableNode;
import com.cosmos.acacia.gui.AcaciaPanel;
import com.cosmos.acacia.gui.AcaciaTreeTable;
import com.cosmos.swingb.JBScrollPane;

/**
 * 
 * Created	:	02.11.2008
 * @author	Petar Milev
 *
 */
public class ComplexProductDetailsPanel extends AcaciaPanel{
    
    private ComplexProduct complexProduct;
    
    private AcaciaTreeTable productTreeTable;
    
    private List<?> columnIdentifiers;
    
    private JBScrollPane scrollPane;
    
    private AssemblingRemote formSession = getBean(AssemblingRemote.class);

    /** Creates new form ComplexProductDetailsPanel 
     * @param complexProduct */
    public ComplexProductDetailsPanel(ComplexProduct complexProduct) {
        this.complexProduct = complexProduct;
        initComponents();
        initComponentsCustom();
        initData();
    }

    private void initComponentsCustom() {
        productTitledPanel.setTitle(getResourceMap().getString("productTitledPanel.title"));
        productTreeTable = new AcaciaTreeTable();
        DefaultTreeTableModel treeTableModel =
                (DefaultTreeTableModel)productTreeTable.getTreeTableModel();
        treeTableModel.setColumnIdentifiers(getColumnIdentifiers());
        /*productTreeTable = new AcaciaTable();
        bindingGroup = new BindingGroup();
        entityProperties = getFormSession().getComplexProductItemEntityProperties();
        productTreeTable.bind(bindingGroup, getComplexProductItems(), entityProperties);
        bindingGroup.bind();*/
        scrollPane = new JBScrollPane();
        scrollPane.setViewportView(productTreeTable);
        
        productTitledPanel.setContentContainer(scrollPane);
    }
    
    private List<?> getColumnIdentifiers()
    {
        if(columnIdentifiers == null)
        {
            columnIdentifiers = Arrays.asList(
                    "Product Code",
                    "Product Name",
                    "Measure Unit",
                    "Sale Price",
                    "Quantity",
                    "Unit Price",
                    "Item Price",
                    "Applied Algorithm",
                    "Applied Value");
        }

        return columnIdentifiers;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productTitledPanel = new com.cosmos.swingb.JBTitledPanel();
        closeButton = new com.cosmos.swingb.JBButton();

        setName("Form"); // NOI18N

        productTitledPanel.setName("productTitledPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(ComplexProductDetailsPanel.class);
        closeButton.setIcon(resourceMap.getIcon("closeButton.icon")); // NOI18N
        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productTitledPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(585, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(productTitledPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBButton closeButton;
    private com.cosmos.swingb.JBTitledPanel productTitledPanel;
    // End of variables declaration//GEN-END:variables
    
    @Override
    protected void initData() {
        DefaultTreeTableModel treeTableModel = 
            (DefaultTreeTableModel)productTreeTable.getTreeTableModel();
        DefaultMutableTreeTableNode rootNode = new ProductItemTreeTableNode(complexProduct, getFormSession());
        treeTableModel.setRoot(rootNode);
        
        closeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                close();
            }
        });
    }

    public AssemblingRemote getFormSession() {
        return formSession;
    }
    
}
