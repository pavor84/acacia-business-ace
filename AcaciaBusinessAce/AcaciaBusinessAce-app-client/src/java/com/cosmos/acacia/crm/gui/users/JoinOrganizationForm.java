/*
 * JoinOrganizationForm.java
 *
 * Created on 05 July 2008, 10:37
 */

package com.cosmos.acacia.crm.gui.users;

import com.cosmos.acacia.crm.bl.users.UsersRemote;
import com.cosmos.acacia.crm.data.Address;
import com.cosmos.acacia.crm.data.ContactPerson;
import com.cosmos.acacia.crm.data.Organization;
import com.cosmos.acacia.crm.data.Person;
import com.cosmos.acacia.crm.gui.contactbook.AddressListPanel;
import com.cosmos.acacia.crm.gui.contactbook.ContactPersonsListPanel;
import com.cosmos.acacia.crm.gui.contactbook.OrganizationsListPanel;
import com.cosmos.acacia.gui.AbstractTablePanel.Button;
import com.cosmos.acacia.gui.AcaciaPanel;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.math.BigInteger;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author  Bozhidar Bozhanov
 */
public class JoinOrganizationForm extends AcaciaPanel{

    /** Creates new form JoinOrganizationForm */
    public JoinOrganizationForm(BigInteger parentId) {
        super(parentId);
        initComponents();
        initData();
    }
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        organizationComboList = new com.cosmos.acacia.gui.AcaciaComboList();
        organizationLabel = new com.cosmos.swingb.JBLabel();
        jBButton1 = new com.cosmos.swingb.JBButton();
        branchLabel = new com.cosmos.swingb.JBLabel();
        branchComboList = new com.cosmos.acacia.gui.AcaciaComboList();
        personLabel = new com.cosmos.swingb.JBLabel();
        personComboList = new com.cosmos.acacia.gui.AcaciaComboList();

        setName("Form"); // NOI18N

        organizationComboList.setName("organizationComboList"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(JoinOrganizationForm.class);
        organizationLabel.setText(resourceMap.getString("organizationLabel.text")); // NOI18N
        organizationLabel.setName("organizationLabel"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getActionMap(JoinOrganizationForm.class, this);
        jBButton1.setAction(actionMap.get("requestJoin")); // NOI18N
        jBButton1.setName("jBButton1"); // NOI18N

        branchLabel.setText(resourceMap.getString("branchLabel.text")); // NOI18N
        branchLabel.setName("branchLabel"); // NOI18N

        branchComboList.setName("branchComboList"); // NOI18N

        personLabel.setText(resourceMap.getString("personLabel.text")); // NOI18N
        personLabel.setName("personLabel"); // NOI18N

        personComboList.setName("personComboList"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(branchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(organizationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(personComboList, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
                            .addComponent(branchComboList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(organizationComboList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)))
                    .addComponent(jBButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(organizationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(organizationComboList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(branchComboList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(branchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personComboList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(personLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.acacia.gui.AcaciaComboList branchComboList;
    private com.cosmos.swingb.JBLabel branchLabel;
    private com.cosmos.swingb.JBButton jBButton1;
    private com.cosmos.acacia.gui.AcaciaComboList organizationComboList;
    private com.cosmos.swingb.JBLabel organizationLabel;
    private com.cosmos.acacia.gui.AcaciaComboList personComboList;
    private com.cosmos.swingb.JBLabel personLabel;
    // End of variables declaration//GEN-END:variables

    private UsersRemote formSession;
    
    @Override
    protected void initData() {
       setResizable(false);
       
       OrganizationsListPanel organizationsTable = new OrganizationsListPanel(null);
       // Filtering current organization
       organizationsTable.getDataTable().getData().remove(getAcaciaSession().getOrganization());
       
       organizationComboList.initUnbound(organizationsTable, "${organizationName}");

       organizationComboList.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                Organization organization = (Organization) organizationComboList.getSelectedItem();
                if (organization == null) {
                    branchComboList.getComboBox().removeAllItems();
                    branchComboList.setEnabled(false);
                    return;
                }

                branchComboList.setEnabled(true);
                AddressListPanel branchesTable = new AddressListPanel(organization.getId());
                branchesTable.setVisible(Button.New, false);
                branchComboList.initUnbound(branchesTable, "${addressName}");

                branchComboList.addItemListener(new ItemListener() {
                    @Override
                    public void itemStateChanged(ItemEvent e) {
                        Address branch = (Address) branchComboList.getSelectedItem();

                        if (branch == null) {
                            personComboList.getComboBox().removeAllItems();
                            personComboList.setEnabled(false);
                            return;
                        }
                        personComboList.setEnabled(true);
                        ContactPersonsListPanel personsTable = new ContactPersonsListPanel(branch.getId());
                        personComboList.initUnbound(personsTable, "${contact.displayName} (${positionType.positionTypeName})");
                    }

                });
            }
       });

       branchComboList.setEnabled(false);
       personComboList.setEnabled(false);
    }

    @Action
    public void requestJoin() {
        Organization organization = (Organization) organizationComboList.getSelectedItem();
        Address branch = (Address) branchComboList.getSelectedItem();
        Person person = null;
        if (personComboList.getSelectedItem() != null)
             person = (Person) ((ContactPerson) personComboList.getSelectedItem()).getContact();
        
        
        if (organization != null)
            getFormSession().joinOrganization(organization, branch, person);
        
        JOptionPane.showMessageDialog(this, getResourceMap().getString("JoinOrganizationForm.request.sent"));
        close();
    }
    
     protected UsersRemote getFormSession() {
        if (formSession == null) {
             try {
                 formSession = getBean(UsersRemote.class);
             } catch(Exception ex) {
                 ex.printStackTrace();
             }
        }

         return formSession;
    }
     
}
