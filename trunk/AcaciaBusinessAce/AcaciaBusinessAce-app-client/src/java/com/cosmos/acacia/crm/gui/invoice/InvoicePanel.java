package com.cosmos.acacia.crm.gui.invoice;

import com.cosmos.acacia.crm.bl.impl.InvoicesListRemote;
import com.cosmos.acacia.crm.data.Invoice;
import com.cosmos.acacia.crm.gui.contactbook.PersonsListPanel;
import com.cosmos.acacia.gui.AbstractTablePanel;
import com.cosmos.acacia.gui.AcaciaLookupProvider;
import com.cosmos.acacia.gui.BaseEntityPanel;
import com.cosmos.acacia.gui.EntityFormButtonPanel;
import com.cosmos.beansbinding.EntityProperties;
import com.cosmos.swingb.DialogResponse;
import java.math.BigInteger;
import javax.ejb.EJB;
import javax.naming.InitialContext;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author  rlozanov
 */
public class InvoicePanel extends BaseEntityPanel {
    
    public InvoicePanel(Invoice invoice) {
        super(invoice.getDataObject().getParentDataObjectId());
        this.invoice = invoice;
        init();
    }

    public InvoicePanel(BigInteger parent) {
        super(parent);
        init();
    }

    /**
     * TODO: should remove this constructor - will be used for tests only.
     */
    public InvoicePanel() {
        super(null);
        init();
    }
    
    @Override
    protected void init() {
        initComponents();
        super.init();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recipientPanel = new com.cosmos.swingb.JBPanel();
        recipientNameLabel = new com.cosmos.swingb.JBLabel();
        recipientNameTextField = new com.cosmos.swingb.JBTextField();
        recipientContactLabel = new com.cosmos.swingb.JBLabel();
        recipientContactNameLabel = new com.cosmos.swingb.JBLabel();
        recipientContactNameTextField = new com.cosmos.swingb.JBTextField();
        recipientContactLookup = new com.cosmos.acacia.gui.AcaciaLookup();
        generalInfoPanel = new com.cosmos.swingb.JBPanel();
        dateLabel = new com.cosmos.swingb.JBLabel();
        dateDatePicker = new com.cosmos.swingb.JBDatePicker();
        invoiceNumberTextField = new com.cosmos.swingb.JBTextField();
        invoiceNumberLabel = new com.cosmos.swingb.JBLabel();
        typeLabel = new com.cosmos.swingb.JBLabel();
        invoiceTypeComboBox = new com.cosmos.acacia.gui.AcaciaComboBox();
        itemsPanel = new com.cosmos.acacia.gui.TableHolderPanel();
        totalLabel = new com.cosmos.swingb.JBLabel();
        totalTextField = new com.cosmos.swingb.JBTextField();
        currencyComboBox = new com.cosmos.swingb.JBComboBox();
        deliveryPanel = new com.cosmos.swingb.JBPanel();
        invoiceDeliveryMethodLabel = new com.cosmos.swingb.JBLabel();
        documentDeliveryMethodComboBox = new com.cosmos.swingb.JBComboBox();
        transportationMethodLabel = new com.cosmos.swingb.JBLabel();
        transportationMethodComboBox = new com.cosmos.swingb.JBComboBox();
        shipingAgentLabel = new com.cosmos.swingb.JBLabel();
        transportationPriceLabel = new com.cosmos.swingb.JBLabel();
        transportationPriceTextField = new com.cosmos.swingb.JBTextField();
        transportationPriceCurrencyComboBox = new com.cosmos.swingb.JBComboBox();
        shippingAgentLookup = new com.cosmos.acacia.gui.AcaciaLookup();
        entityFormButtonPanel = new com.cosmos.acacia.gui.EntityFormButtonPanel();

        setName("Form"); // NOI18N

        recipientPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Recipient"));
        recipientPanel.setName("recipientPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(InvoicePanel.class);
        recipientNameLabel.setText(resourceMap.getString("recipientNameLabel.text")); // NOI18N
        recipientNameLabel.setName("recipientNameLabel"); // NOI18N

        recipientNameTextField.setName("recipientNameTextField"); // NOI18N

        recipientContactLabel.setText(resourceMap.getString("recipientContactLabel.text")); // NOI18N
        recipientContactLabel.setName("recipientContactLabel"); // NOI18N

        recipientContactNameLabel.setText(resourceMap.getString("recipientContactNameLabel.text")); // NOI18N
        recipientContactNameLabel.setName("recipientContactNameLabel"); // NOI18N

        recipientContactNameTextField.setName("recipientContactNameTextField"); // NOI18N

        recipientContactLookup.setName("recipientContactLookup"); // NOI18N

        javax.swing.GroupLayout recipientPanelLayout = new javax.swing.GroupLayout(recipientPanel);
        recipientPanel.setLayout(recipientPanelLayout);
        recipientPanelLayout.setHorizontalGroup(
            recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recipientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recipientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientContactNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientContactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(recipientContactNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recipientNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addComponent(recipientContactLookup, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        recipientPanelLayout.setVerticalGroup(
            recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recipientPanelLayout.createSequentialGroup()
                .addGroup(recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipientContactNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientContactNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(recipientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recipientContactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientContactLookup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        generalInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("General Info"));
        generalInfoPanel.setName("generalInfoPanel"); // NOI18N

        dateLabel.setText(resourceMap.getString("dateLabel.text")); // NOI18N
        dateLabel.setName("dateLabel"); // NOI18N

        dateDatePicker.setName("dateDatePicker"); // NOI18N

        invoiceNumberTextField.setEditable(false);
        invoiceNumberTextField.setName("invoiceNumberTextField"); // NOI18N

        invoiceNumberLabel.setText(resourceMap.getString("invoiceNumberLabel.text")); // NOI18N
        invoiceNumberLabel.setName("invoiceNumberLabel"); // NOI18N

        typeLabel.setText(resourceMap.getString("typeLabel.text")); // NOI18N
        typeLabel.setName("typeLabel"); // NOI18N

        invoiceTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        invoiceTypeComboBox.setName("invoiceTypeComboBox"); // NOI18N

        javax.swing.GroupLayout generalInfoPanelLayout = new javax.swing.GroupLayout(generalInfoPanel);
        generalInfoPanel.setLayout(generalInfoPanelLayout);
        generalInfoPanelLayout.setHorizontalGroup(
            generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generalInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoiceNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateDatePicker, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(invoiceNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(invoiceTypeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addContainerGap())
        );
        generalInfoPanelLayout.setVerticalGroup(
            generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalInfoPanelLayout.createSequentialGroup()
                .addGroup(generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        itemsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Items"));
        itemsPanel.setName("itemsPanel"); // NOI18N

        javax.swing.GroupLayout itemsPanelLayout = new javax.swing.GroupLayout(itemsPanel);
        itemsPanel.setLayout(itemsPanelLayout);
        itemsPanelLayout.setHorizontalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
        );
        itemsPanelLayout.setVerticalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        totalLabel.setText(resourceMap.getString("totalLabel.text")); // NOI18N
        totalLabel.setName("totalLabel"); // NOI18N

        totalTextField.setName("totalTextField"); // NOI18N

        currencyComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currencyComboBox.setName("currencyComboBox"); // NOI18N

        deliveryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Delivery/Transportation"));
        deliveryPanel.setName("deliveryPanel"); // NOI18N

        invoiceDeliveryMethodLabel.setText(resourceMap.getString("invoiceDeliveryMethodLabel.text")); // NOI18N
        invoiceDeliveryMethodLabel.setName("invoiceDeliveryMethodLabel"); // NOI18N

        documentDeliveryMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        documentDeliveryMethodComboBox.setName("documentDeliveryMethodComboBox"); // NOI18N

        transportationMethodLabel.setText(resourceMap.getString("transportationMethodLabel.text")); // NOI18N
        transportationMethodLabel.setName("transportationMethodLabel"); // NOI18N

        transportationMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transportationMethodComboBox.setName("transportationMethodComboBox"); // NOI18N

        shipingAgentLabel.setText(resourceMap.getString("shipingAgentLabel.text")); // NOI18N
        shipingAgentLabel.setName("shipingAgentLabel"); // NOI18N

        transportationPriceLabel.setText(resourceMap.getString("transportationPriceLabel.text")); // NOI18N
        transportationPriceLabel.setName("transportationPriceLabel"); // NOI18N

        transportationPriceTextField.setName("transportationPriceTextField"); // NOI18N

        transportationPriceCurrencyComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transportationPriceCurrencyComboBox.setName("transportationPriceCurrencyComboBox"); // NOI18N

        shippingAgentLookup.setName("shippingAgentLookup"); // NOI18N

        javax.swing.GroupLayout deliveryPanelLayout = new javax.swing.GroupLayout(deliveryPanel);
        deliveryPanel.setLayout(deliveryPanelLayout);
        deliveryPanelLayout.setHorizontalGroup(
            deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transportationMethodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipingAgentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceDeliveryMethodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transportationPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deliveryPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shippingAgentLookup, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addGroup(deliveryPanelLayout.createSequentialGroup()
                                .addComponent(transportationPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(transportationPriceCurrencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(transportationMethodComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                    .addComponent(documentDeliveryMethodComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE))
                .addContainerGap())
        );
        deliveryPanelLayout.setVerticalGroup(
            deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPanelLayout.createSequentialGroup()
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceDeliveryMethodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentDeliveryMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transportationMethodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transportationMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deliveryPanelLayout.createSequentialGroup()
                        .addComponent(shippingAgentLookup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(transportationPriceCurrencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transportationPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transportationPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(shipingAgentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        entityFormButtonPanel.setName("entityFormButtonPanel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(entityFormButtonPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(generalInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recipientPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deliveryPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(649, Short.MAX_VALUE)
                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generalInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipientPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliveryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entityFormButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBComboBox currencyComboBox;
    private com.cosmos.swingb.JBDatePicker dateDatePicker;
    private com.cosmos.swingb.JBLabel dateLabel;
    private com.cosmos.swingb.JBPanel deliveryPanel;
    private com.cosmos.swingb.JBComboBox documentDeliveryMethodComboBox;
    private com.cosmos.acacia.gui.EntityFormButtonPanel entityFormButtonPanel;
    private com.cosmos.swingb.JBPanel generalInfoPanel;
    private com.cosmos.swingb.JBLabel invoiceDeliveryMethodLabel;
    private com.cosmos.swingb.JBLabel invoiceNumberLabel;
    private com.cosmos.swingb.JBTextField invoiceNumberTextField;
    private com.cosmos.acacia.gui.AcaciaComboBox invoiceTypeComboBox;
    private com.cosmos.acacia.gui.TableHolderPanel itemsPanel;
    private com.cosmos.swingb.JBLabel recipientContactLabel;
    private com.cosmos.acacia.gui.AcaciaLookup recipientContactLookup;
    private com.cosmos.swingb.JBLabel recipientContactNameLabel;
    private com.cosmos.swingb.JBTextField recipientContactNameTextField;
    private com.cosmos.swingb.JBLabel recipientNameLabel;
    private com.cosmos.swingb.JBTextField recipientNameTextField;
    private com.cosmos.swingb.JBPanel recipientPanel;
    private com.cosmos.swingb.JBLabel shipingAgentLabel;
    private com.cosmos.acacia.gui.AcaciaLookup shippingAgentLookup;
    private com.cosmos.swingb.JBLabel totalLabel;
    private com.cosmos.swingb.JBTextField totalTextField;
    private com.cosmos.swingb.JBComboBox transportationMethodComboBox;
    private com.cosmos.swingb.JBLabel transportationMethodLabel;
    private com.cosmos.swingb.JBComboBox transportationPriceCurrencyComboBox;
    private com.cosmos.swingb.JBLabel transportationPriceLabel;
    private com.cosmos.swingb.JBTextField transportationPriceTextField;
    private com.cosmos.swingb.JBLabel typeLabel;
    // End of variables declaration//GEN-END:variables

    @EJB
    private InvoicesListRemote formSession;

    private Invoice invoice;
    private BindingGroup invoiceBindingGroup;
    private Binding recipientContactBinding;
    private Binding shippingByBinding;

    @Override
    protected void initData() {
        setResizable(false);
        
        if (invoice == null) {
            invoice = getFormSession().newInvoice();
        }
        
        invoiceBindingGroup = new BindingGroup();
        
        EntityProperties entityProps = getInvoiceEntityProperties();
    
        System.out.println("DEBUG!!!!! entity props - " +  entityProps.getPropertyDetails("recipientContactId"));
        recipientContactBinding = recipientContactLookup.bind(new AcaciaLookupProvider() {
                @Override
                public Object showSelectionControl() {
                    return onChoosePerson();
                }
            }, invoiceBindingGroup,
            invoice,
            entityProps.getPropertyDetails("recipientContactId"),
            "${firstName} ${lastName}",
            UpdateStrategy.READ_WRITE);

        shippingByBinding = shippingAgentLookup.bind(new AcaciaLookupProvider() {
                @Override
                public Object showSelectionControl() {
                    return onChoosePerson();
                }
            }, invoiceBindingGroup,
            invoice,
            entityProps.getPropertyDetails("shippingAgentLink"),
            "${firstName} ${lastName}",
            UpdateStrategy.READ_WRITE);
        
        recipientNameTextField.bind(invoiceBindingGroup, invoice, entityProps.getPropertyDetails("recipientName"));
        recipientContactNameTextField.bind(invoiceBindingGroup, invoice, entityProps.getPropertyDetails("recipientContactName"));
        totalTextField.bind(invoiceBindingGroup, invoice, entityProps.getPropertyDetails("totalInvoiceValue"));
        transportationPriceTextField.bind(invoiceBindingGroup, invoice, entityProps.getPropertyDetails("transportationPrice"));
            
        InvoiceItemsListPanel invoiceItemsTable = new InvoiceItemsListPanel(invoice.getInvoiceId());
        invoiceItemsTable.setVisible(AbstractTablePanel.Button.NewModifyDelete);
        
        itemsPanel.add(invoiceItemsTable);
        
        // ComboBoxes
        invoiceTypeComboBox.bind(invoiceBindingGroup, getFormSession().getInvoiceTypes(), invoice,
                                 entityProps.getPropertyDetails("invoiceType"));
        documentDeliveryMethodComboBox.bind(invoiceBindingGroup, getFormSession().getDocumentDeliveryMethods(), invoice,
                                 entityProps.getPropertyDetails("documentDeliveryMethod"));
        transportationMethodComboBox.bind(invoiceBindingGroup, getFormSession().getTransportationMethods(), invoice,
                                 entityProps.getPropertyDetails("transportationMethod"));
        currencyComboBox.bind(invoiceBindingGroup, getFormSession().getCurrencies(), invoice,
                                 entityProps.getPropertyDetails("currency"));
        transportationPriceCurrencyComboBox.bind(invoiceBindingGroup, getFormSession().getCurrencies(), invoice,
                                 entityProps.getPropertyDetails("currency"));
        
        invoiceBindingGroup.bind();
    }

    @Override
    public void performSave(boolean closeAfter) {
        log.info("Save: invoice: " + invoice);
        
        invoice = getFormSession().saveInvoice(invoice);
        setDialogResponse(DialogResponse.SAVE);
        setSelectedValue(invoice);
        
        if (closeAfter) {
            close();
        }
    }

    @Override
    public BindingGroup getBindingGroup() {
        return invoiceBindingGroup;
    }

    @Override
    public Object getEntity() {
        return invoice;
    }

    @Override
    public EntityFormButtonPanel getButtonPanel() {
        return entityFormButtonPanel;
    }
    
    protected InvoicesListRemote getFormSession()
    {
        if(formSession == null)
        {
            try
            {
                formSession = InitialContext.doLookup(InvoicesListRemote.class.getName());
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }

        return formSession;
    }

    protected EntityProperties getInvoiceEntityProperties()
    {
        return getFormSession().getInvoiceEntityProperties();
    }
    
    protected Object onChoosePerson() {
        PersonsListPanel listPanel = new PersonsListPanel(null);

        DialogResponse dResponse = listPanel.showDialog(this);
        if ( DialogResponse.SELECT.equals(dResponse) ){
            return listPanel.getSelectedRowObject();
        }
        return null;
    }
    
}
