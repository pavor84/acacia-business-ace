/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PurchaseInvoicePanel.java
 *
 * Created on 2009-4-19, 11:37:33
 */

package com.cosmos.acacia.crm.gui.purchase;

import com.cosmos.acacia.crm.bl.purchase.PurchaseServiceRemote;
import com.cosmos.acacia.crm.data.purchase.PurchaseInvoice;
import com.cosmos.acacia.gui.BaseEntityPanel;
import com.cosmos.acacia.gui.EntityFormButtonPanel;
import com.cosmos.swingb.DialogResponse;
import java.awt.BorderLayout;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author Miro
 */
public class PurchaseInvoicePanel extends BaseEntityPanel {

    private static PurchaseServiceRemote formSession;
    //
    private PurchaseInvoice purchaseInvoice;
    private EntityFormButtonPanel entityFormButtonPanel;
    private BindingGroup bindingGroup;

    /** Creates new form PurchaseInvoicePanel */
    public PurchaseInvoicePanel(PurchaseInvoice purchaseInvoice) {
        super(purchaseInvoice.getParentId());
        this.purchaseInvoice = purchaseInvoice;
        initComponents();
        init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new com.cosmos.swingb.JBTabbedPane();
        primaryInfoPanel = new com.cosmos.swingb.JBPanel();
        invoiceItemsPanel = new com.cosmos.swingb.JBPanel();

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        mainTabbedPane.setName("mainTabbedPane"); // NOI18N

        primaryInfoPanel.setName("primaryInfoPanel"); // NOI18N

        javax.swing.GroupLayout primaryInfoPanelLayout = new javax.swing.GroupLayout(primaryInfoPanel);
        primaryInfoPanel.setLayout(primaryInfoPanelLayout);
        primaryInfoPanelLayout.setHorizontalGroup(
            primaryInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        primaryInfoPanelLayout.setVerticalGroup(
            primaryInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(PurchaseInvoicePanel.class);
        mainTabbedPane.addTab(resourceMap.getString("primaryInfoPanel.TabConstraints.tabTitle"), primaryInfoPanel); // NOI18N

        invoiceItemsPanel.setName("invoiceItemsPanel"); // NOI18N

        javax.swing.GroupLayout invoiceItemsPanelLayout = new javax.swing.GroupLayout(invoiceItemsPanel);
        invoiceItemsPanel.setLayout(invoiceItemsPanelLayout);
        invoiceItemsPanelLayout.setHorizontalGroup(
            invoiceItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        invoiceItemsPanelLayout.setVerticalGroup(
            invoiceItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab(resourceMap.getString("invoiceItemsPanel.TabConstraints.tabTitle"), invoiceItemsPanel); // NOI18N

        add(mainTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBPanel invoiceItemsPanel;
    private com.cosmos.swingb.JBTabbedPane mainTabbedPane;
    private com.cosmos.swingb.JBPanel primaryInfoPanel;
    // End of variables declaration//GEN-END:variables


    @Override
    protected void initData() {
        primaryInfoPanel.setLayout(new BorderLayout());
        primaryInfoPanel.add(new PurchaseInvoicePrimaryInfoPanel(this), BorderLayout.CENTER);
    }

    protected String getResourceString(String key) {
        return getResourceMap().getString(key);
    }

    @Override
    public void performSave(boolean closeAfter) {
        try {
            purchaseInvoice = getFormSession().save(purchaseInvoice);
            setDialogResponse(DialogResponse.SAVE);
            setSelectedValue(purchaseInvoice);
            if (closeAfter) {
                close();
            }
        } catch (Exception ex) {
            handleException("purchaseInvoice: " + purchaseInvoice, ex);
        }
    }

    @Override
    public BindingGroup getBindingGroup() {
        if(bindingGroup == null) {
            bindingGroup = new BindingGroup();
        }

        return bindingGroup;
    }

    @Override
    public Object getEntity() {
        return purchaseInvoice;
    }

    @Override
    public EntityFormButtonPanel getButtonPanel() {
        if (entityFormButtonPanel == null) {
            entityFormButtonPanel = new EntityFormButtonPanel();
        }

        return entityFormButtonPanel;
    }

    protected PurchaseServiceRemote getFormSession() {
        if (formSession == null) {
            formSession = getBean(PurchaseServiceRemote.class);
        }

        return formSession;
    }
}
