/*
 * AssemblingSchemaItemPanel.java
 *
 * Created on Събота, 2008, Юни 14, 17:59
 */

package com.cosmos.acacia.crm.gui.assembling;

import com.cosmos.acacia.crm.bl.assembling.AssemblingRemote;
import com.cosmos.acacia.crm.data.DbResource;
import com.cosmos.acacia.crm.data.assembling.AssemblingSchema;
import com.cosmos.acacia.crm.data.assembling.AssemblingSchemaItem;
import com.cosmos.acacia.gui.AcaciaToStringConverter;
import com.cosmos.acacia.gui.BaseEntityPanel;
import com.cosmos.acacia.gui.EntityFormButtonPanel;
import com.cosmos.beansbinding.EntityProperties;
import com.cosmos.beansbinding.PropertyDetails;
import com.cosmos.swingb.DialogResponse;
import java.util.List;
import javax.ejb.EJB;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author  Miro
 */
public class AssemblingSchemaItemPanel
    extends BaseEntityPanel
{
    @EJB
    private static AssemblingRemote formSession;

    private AssemblingSchemaItem entity;
    private EntityProperties entityProps;
    private BindingGroup bindingGroup;


    /** Creates new form AssemblingSchemaItemPanel */
    public AssemblingSchemaItemPanel()
    {
        super(null);
        initComponents();
    }

    public AssemblingSchemaItemPanel(AssemblingSchemaItem schemaItem)
    {
        super(schemaItem.getParentId());
        this.entity = schemaItem;
        init();
    }

    @Override
    protected void init()
    {
        initComponents();
        super.init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldsPanel = new com.cosmos.swingb.JBPanel();
        firstFieldsPanel = new com.cosmos.swingb.JBPanel();
        schemaCodeLabel = new com.cosmos.swingb.JBLabel();
        schemaCodeTextField = new com.cosmos.swingb.JBTextField();
        messageCodeTextField = new com.cosmos.swingb.JBTextField();
        messageCodeLabel = new com.cosmos.swingb.JBLabel();
        algorithmComboBox = new com.cosmos.swingb.JBComboBox();
        algorithmLabel = new com.cosmos.swingb.JBLabel();
        minSelectionsTextField = new com.cosmos.swingb.JBTextField();
        minSelectionsLabel = new com.cosmos.swingb.JBLabel();
        quantityTextField = new com.cosmos.swingb.JBTextField();
        quantityLabel = new com.cosmos.swingb.JBLabel();
        secondFieldsPanel = new com.cosmos.swingb.JBPanel();
        schemaNameTextField = new com.cosmos.swingb.JBTextField();
        schemaNameLabel = new com.cosmos.swingb.JBLabel();
        messageTextTextField = new com.cosmos.swingb.JBTextField();
        messageTextLabel = new com.cosmos.swingb.JBLabel();
        dataTypeComboBox = new com.cosmos.swingb.JBComboBox();
        dataTypeLabel = new com.cosmos.swingb.JBLabel();
        maxSelectionsTextField = new com.cosmos.swingb.JBTextField();
        maxSelectionsLabel = new com.cosmos.swingb.JBLabel();
        defaultValueTextField = new com.cosmos.swingb.JBTextField();
        defaultValueLabel = new com.cosmos.swingb.JBLabel();
        descriptionPanel = new com.cosmos.swingb.JBPanel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextPane = new com.cosmos.swingb.JBTextPane();
        entityFormButtonPanel = new com.cosmos.acacia.gui.EntityFormButtonPanel();

        setName("Form"); // NOI18N

        fieldsPanel.setName("fieldsPanel"); // NOI18N
        fieldsPanel.setLayout(new java.awt.GridLayout(1, 0));

        firstFieldsPanel.setName("firstFieldsPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(AssemblingSchemaItemPanel.class);
        schemaCodeLabel.setText(resourceMap.getString("schemaCodeLabel.text")); // NOI18N
        schemaCodeLabel.setName("schemaCodeLabel"); // NOI18N

        schemaCodeTextField.setEditable(false);
        schemaCodeTextField.setName("schemaCodeTextField"); // NOI18N

        messageCodeTextField.setName("messageCodeTextField"); // NOI18N
        messageCodeTextField.setNextFocusableComponent(messageTextTextField);

        messageCodeLabel.setText(resourceMap.getString("messageCodeLabel.text")); // NOI18N
        messageCodeLabel.setName("messageCodeLabel"); // NOI18N

        algorithmComboBox.setName("algorithmComboBox"); // NOI18N
        algorithmComboBox.setNextFocusableComponent(dataTypeComboBox);

        algorithmLabel.setText(resourceMap.getString("algorithmLabel.text")); // NOI18N
        algorithmLabel.setName("algorithmLabel"); // NOI18N

        minSelectionsTextField.setName("minSelectionsTextField"); // NOI18N
        minSelectionsTextField.setNextFocusableComponent(maxSelectionsTextField);

        minSelectionsLabel.setText(resourceMap.getString("minSelectionsLabel.text")); // NOI18N
        minSelectionsLabel.setName("minSelectionsLabel"); // NOI18N

        quantityTextField.setName("quantityTextField"); // NOI18N
        quantityTextField.setNextFocusableComponent(defaultValueTextField);

        quantityLabel.setText(resourceMap.getString("quantityLabel.text")); // NOI18N
        quantityLabel.setName("quantityLabel"); // NOI18N

        javax.swing.GroupLayout firstFieldsPanelLayout = new javax.swing.GroupLayout(firstFieldsPanel);
        firstFieldsPanel.setLayout(firstFieldsPanelLayout);
        firstFieldsPanelLayout.setHorizontalGroup(
            firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstFieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schemaCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minSelectionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(minSelectionsTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(messageCodeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(schemaCodeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap())
        );
        firstFieldsPanelLayout.setVerticalGroup(
            firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstFieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemaCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schemaCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minSelectionsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minSelectionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(firstFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        fieldsPanel.add(firstFieldsPanel);

        secondFieldsPanel.setName("secondFieldsPanel"); // NOI18N

        schemaNameTextField.setEditable(false);
        schemaNameTextField.setName("schemaNameTextField"); // NOI18N

        schemaNameLabel.setText(resourceMap.getString("schemaNameLabel.text")); // NOI18N
        schemaNameLabel.setName("schemaNameLabel"); // NOI18N

        messageTextTextField.setName("messageTextTextField"); // NOI18N
        messageTextTextField.setNextFocusableComponent(algorithmComboBox);

        messageTextLabel.setText(resourceMap.getString("messageTextLabel.text")); // NOI18N
        messageTextLabel.setName("messageTextLabel"); // NOI18N

        dataTypeComboBox.setName("dataTypeComboBox"); // NOI18N
        dataTypeComboBox.setNextFocusableComponent(minSelectionsTextField);

        dataTypeLabel.setText(resourceMap.getString("dataTypeLabel.text")); // NOI18N
        dataTypeLabel.setName("dataTypeLabel"); // NOI18N

        maxSelectionsTextField.setName("maxSelectionsTextField"); // NOI18N
        maxSelectionsTextField.setNextFocusableComponent(quantityTextField);

        maxSelectionsLabel.setText(resourceMap.getString("maxSelectionsLabel.text")); // NOI18N
        maxSelectionsLabel.setName("maxSelectionsLabel"); // NOI18N

        defaultValueTextField.setName("defaultValueTextField"); // NOI18N
        defaultValueTextField.setNextFocusableComponent(descriptionTextPane);

        defaultValueLabel.setText(resourceMap.getString("defaultValueLabel.text")); // NOI18N
        defaultValueLabel.setName("defaultValueLabel"); // NOI18N

        javax.swing.GroupLayout secondFieldsPanelLayout = new javax.swing.GroupLayout(secondFieldsPanel);
        secondFieldsPanel.setLayout(secondFieldsPanelLayout);
        secondFieldsPanelLayout.setHorizontalGroup(
            secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondFieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schemaNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxSelectionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxSelectionsTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(dataTypeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(messageTextTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(schemaNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(defaultValueTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                .addContainerGap())
        );
        secondFieldsPanelLayout.setVerticalGroup(
            secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondFieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemaNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schemaNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageTextTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxSelectionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxSelectionsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secondFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defaultValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        fieldsPanel.add(secondFieldsPanel);

        descriptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("descriptionPanel.border.title"))); // NOI18N
        descriptionPanel.setName("descriptionPanel"); // NOI18N
        descriptionPanel.setLayout(new java.awt.BorderLayout());

        descriptionScrollPane.setName("descriptionScrollPane"); // NOI18N

        descriptionTextPane.setName("descriptionTextPane"); // NOI18N
        descriptionTextPane.setNextFocusableComponent(entityFormButtonPanel);
        descriptionScrollPane.setViewportView(descriptionTextPane);

        descriptionPanel.add(descriptionScrollPane, java.awt.BorderLayout.CENTER);

        entityFormButtonPanel.setName("entityFormButtonPanel"); // NOI18N
        entityFormButtonPanel.setNextFocusableComponent(messageCodeTextField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(descriptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entityFormButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entityFormButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBComboBox algorithmComboBox;
    private com.cosmos.swingb.JBLabel algorithmLabel;
    private com.cosmos.swingb.JBComboBox dataTypeComboBox;
    private com.cosmos.swingb.JBLabel dataTypeLabel;
    private com.cosmos.swingb.JBLabel defaultValueLabel;
    private com.cosmos.swingb.JBTextField defaultValueTextField;
    private com.cosmos.swingb.JBPanel descriptionPanel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private com.cosmos.swingb.JBTextPane descriptionTextPane;
    private com.cosmos.acacia.gui.EntityFormButtonPanel entityFormButtonPanel;
    private com.cosmos.swingb.JBPanel fieldsPanel;
    private com.cosmos.swingb.JBPanel firstFieldsPanel;
    private com.cosmos.swingb.JBLabel maxSelectionsLabel;
    private com.cosmos.swingb.JBTextField maxSelectionsTextField;
    private com.cosmos.swingb.JBLabel messageCodeLabel;
    private com.cosmos.swingb.JBTextField messageCodeTextField;
    private com.cosmos.swingb.JBLabel messageTextLabel;
    private com.cosmos.swingb.JBTextField messageTextTextField;
    private com.cosmos.swingb.JBLabel minSelectionsLabel;
    private com.cosmos.swingb.JBTextField minSelectionsTextField;
    private com.cosmos.swingb.JBLabel quantityLabel;
    private com.cosmos.swingb.JBTextField quantityTextField;
    private com.cosmos.swingb.JBLabel schemaCodeLabel;
    private com.cosmos.swingb.JBTextField schemaCodeTextField;
    private com.cosmos.swingb.JBLabel schemaNameLabel;
    private com.cosmos.swingb.JBTextField schemaNameTextField;
    private com.cosmos.swingb.JBPanel secondFieldsPanel;
    // End of variables declaration//GEN-END:variables


    @Override
    protected void initData()
    {
        entityProps = getFormSession().getAssemblingSchemaItemEntityProperties();
        PropertyDetails propDetails;

        bindingGroup = new BindingGroup();

        AssemblingSchema as = entity.getAssemblingSchema();
        //schemaCodeTextField
        schemaCodeTextField.setText(as.getSchemaCode());

        //schemaNameTextField
        schemaNameTextField.setText(as.getSchemaName());

        //messageCodeTextField
        propDetails = entityProps.getPropertyDetails("messageCode");
        messageCodeTextField.bind(bindingGroup, entity, propDetails);

        //messageTextTextField
        propDetails = entityProps.getPropertyDetails("messageText");
        messageTextTextField.bind(bindingGroup, entity, propDetails);

        AcaciaToStringConverter resourceToStringConverter = new AcaciaToStringConverter();
        AutoCompleteDecorator.decorate(algorithmComboBox, resourceToStringConverter);
        AutoCompleteDecorator.decorate(dataTypeComboBox, resourceToStringConverter);

        //algorithmComboBox
        propDetails = entityProps.getPropertyDetails("assemblingAlgorithm");
        algorithmComboBox.bind(bindingGroup, getAlgorithms(), entity, propDetails);

        //dataTypeComboBox
        propDetails = entityProps.getPropertyDetails("dataType");
        dataTypeComboBox.bind(bindingGroup, getDataTypes(), entity, propDetails);

        //minSelectionsTextField
        propDetails = entityProps.getPropertyDetails("minSelections");
        minSelectionsTextField.bind(bindingGroup, entity, propDetails);

        //maxSelectionsTextField
        propDetails = entityProps.getPropertyDetails("maxSelections");
        maxSelectionsTextField.bind(bindingGroup, entity, propDetails);

        //quantityTextField
        propDetails = entityProps.getPropertyDetails("quantity");
        quantityTextField.bind(bindingGroup, entity, propDetails);

        //defaultValueTextField
        propDetails = entityProps.getPropertyDetails("defaultValue");
        defaultValueTextField.bind(bindingGroup, entity, propDetails);

        //descriptionTextPane
        propDetails = entityProps.getPropertyDetails("description");
        descriptionTextPane.bind(bindingGroup, entity, propDetails);

        bindingGroup.bind();
    }

    @Override
    public EntityFormButtonPanel getButtonPanel()
    {
        return entityFormButtonPanel;
    }

    @Override
    public BindingGroup getBindingGroup()
    {
        return bindingGroup;
    }

    @Override
    public Object getEntity()
    {
        return entity;
    }

    @Override
    public void performSave(boolean closeAfter)
    {
        entity = getFormSession().saveSchemaItem(entity);
        setDialogResponse(DialogResponse.SAVE);
        setSelectedValue(entity);
        if(closeAfter)
            close();
    }

    private List<DbResource> getAlgorithms()
    {
        return getFormSession().getAlgorithms();
    }

    private List<DbResource> getDataTypes()
    {
        return getFormSession().getDataTypes();
    }

    protected AssemblingRemote getFormSession()
    {
        if(formSession == null)
        {
            formSession = getBean(AssemblingRemote.class);
        }

        return formSession;
    }
}
