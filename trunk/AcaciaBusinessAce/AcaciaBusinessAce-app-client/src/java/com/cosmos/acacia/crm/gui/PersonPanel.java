/*
 * PersonPanel.java
 *
 * Created on 09 March 2008, 16:50
 */

package com.cosmos.acacia.crm.gui;

import com.cosmos.acacia.crm.bl.impl.PersonsListRemote;
import com.cosmos.acacia.crm.data.Address;
import com.cosmos.acacia.crm.data.City;
import com.cosmos.acacia.crm.data.Country;
import com.cosmos.acacia.crm.data.DataObject;
import com.cosmos.acacia.crm.data.Passport;
import com.cosmos.acacia.crm.data.Person;
import com.cosmos.acacia.gui.AcaciaPanel;
import com.cosmos.acacia.settings.GeneralSettings;
import com.cosmos.beansbinding.EntityProperties;
import com.cosmos.swingb.DialogResponse;
import com.cosmos.swingb.JBErrorPane;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import javax.ejb.EJB;
import javax.naming.InitialContext;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingx.error.ErrorInfo;

/**
 * A form for adding and editing persons
 *
 * @author  Bozhidar Bozhanov
 */
public class PersonPanel extends AcaciaPanel {

    /** Creates new form PersonPanel */
    public PersonPanel(Person person) {
        super(person.getDataObject().getParentDataObject());
        this.person = person;
        init();
    }

    /** Creates new form PersonPanel */
    public PersonPanel(DataObject parentDataObject) {
        super(parentDataObject);
        init();
    }

    private void init()
    {
        initComponents();
        initData();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personalDataPanel = new com.cosmos.swingb.JBPanel();
        firstNameLabel = new javax.swing.JLabel();
        secondNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        extraNameLabel = new javax.swing.JLabel();
        firstNameTextField = new com.cosmos.swingb.JBTextField();
        secondNameTextField = new com.cosmos.swingb.JBTextField();
        lastNameTextField = new com.cosmos.swingb.JBTextField();
        extraNameTextField = new com.cosmos.swingb.JBTextField();
        birthDataPanel = new com.cosmos.swingb.JBPanel();
        personalUniqueIdLabel = new javax.swing.JLabel();
        birthdateLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        personalUniqueIdTextField = new com.cosmos.swingb.JBTextField();
        birthPlaceCountryComboBox = new com.cosmos.swingb.JBComboBox();
        birthPlaceCityComboBox = new com.cosmos.swingb.JBComboBox();
        birthdateDatePicker = new com.cosmos.swingb.JBDatePicker();
        addressesPanel = new com.cosmos.swingb.JBPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressesTable = new com.cosmos.acacia.gui.AcaciaTable();
        passportsPanel = new com.cosmos.swingb.JBPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        passportsTable = new com.cosmos.acacia.gui.AcaciaTable();
        buttonPanel = new com.cosmos.swingb.JBPanel();
        closelButton = new com.cosmos.swingb.JBButton();
        saveButton = new com.cosmos.swingb.JBButton();
        descriptionPanel = new com.cosmos.swingb.JBPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTextPane = new com.cosmos.swingb.JBTextPane();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(PersonPanel.class);
        personalDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("personalDataPanel.border.title"))); // NOI18N
        personalDataPanel.setName("personalDataPanel"); // NOI18N
        personalDataPanel.setTitle(resourceMap.getString("personalDataPanel.title")); // NOI18N

        firstNameLabel.setText(resourceMap.getString("firstNameLabel.text")); // NOI18N
        firstNameLabel.setName("firstNameLabel"); // NOI18N

        secondNameLabel.setText(resourceMap.getString("secondNameLabel.text")); // NOI18N
        secondNameLabel.setName("secondNameLabel"); // NOI18N

        lastNameLabel.setText(resourceMap.getString("lastNameLabel.text")); // NOI18N
        lastNameLabel.setName("lastNameLabel"); // NOI18N

        extraNameLabel.setText(resourceMap.getString("extraNameLabel.text")); // NOI18N
        extraNameLabel.setName("extraNameLabel"); // NOI18N

        firstNameTextField.setName("firstNameTextField"); // NOI18N

        secondNameTextField.setName("secondNameTextField"); // NOI18N

        lastNameTextField.setName("lastNameTextField"); // NOI18N

        extraNameTextField.setName("extraNameTextField"); // NOI18N

        javax.swing.GroupLayout personalDataPanelLayout = new javax.swing.GroupLayout(personalDataPanel);
        personalDataPanel.setLayout(personalDataPanelLayout);
        personalDataPanelLayout.setHorizontalGroup(
            personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameLabel)
                    .addComponent(secondNameLabel)
                    .addComponent(lastNameLabel)
                    .addComponent(extraNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extraNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        personalDataPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {extraNameTextField, firstNameTextField, lastNameTextField, secondNameTextField});

        personalDataPanelLayout.setVerticalGroup(
            personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDataPanelLayout.createSequentialGroup()
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondNameLabel)
                    .addComponent(secondNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extraNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extraNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        birthDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("birthDataPanel.border.title"))); // NOI18N
        birthDataPanel.setName("birthDataPanel"); // NOI18N
        birthDataPanel.setTitle(resourceMap.getString("birthDataPanel.title")); // NOI18N

        personalUniqueIdLabel.setText(resourceMap.getString("personalUniqueIdLabel.text")); // NOI18N
        personalUniqueIdLabel.setName("personalUniqueIdLabel"); // NOI18N

        birthdateLabel.setText(resourceMap.getString("birthdateLabel.text")); // NOI18N
        birthdateLabel.setName("birthdateLabel"); // NOI18N

        countryLabel.setText(resourceMap.getString("countryLabel.text")); // NOI18N
        countryLabel.setName("countryLabel"); // NOI18N

        cityLabel.setText(resourceMap.getString("cityLabel.text")); // NOI18N
        cityLabel.setName("cityLabel"); // NOI18N

        personalUniqueIdTextField.setName("personalUniqueIdTextField"); // NOI18N

        birthPlaceCountryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        birthPlaceCountryComboBox.setName("birthPlaceCountryComboBox"); // NOI18N

        birthPlaceCityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        birthPlaceCityComboBox.setName("birthPlaceCityComboBox"); // NOI18N

        birthdateDatePicker.setFormats(GeneralSettings.getDateFormat());
        birthdateDatePicker.setName("birthdateDatePicker"); // NOI18N

        javax.swing.GroupLayout birthDataPanelLayout = new javax.swing.GroupLayout(birthDataPanel);
        birthDataPanel.setLayout(birthDataPanelLayout);
        birthDataPanelLayout.setHorizontalGroup(
            birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(birthDataPanelLayout.createSequentialGroup()
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(birthDataPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personalUniqueIdLabel)
                            .addComponent(birthdateLabel)))
                    .addGroup(birthDataPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(countryLabel))
                    .addGroup(birthDataPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cityLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(personalUniqueIdTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(birthPlaceCountryComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(birthPlaceCityComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(birthdateDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        birthDataPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {birthPlaceCityComboBox, birthPlaceCountryComboBox, personalUniqueIdTextField});

        birthDataPanelLayout.setVerticalGroup(
            birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(birthDataPanelLayout.createSequentialGroup()
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalUniqueIdLabel)
                    .addComponent(personalUniqueIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(birthdateLabel)
                    .addComponent(birthdateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthPlaceCountryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(birthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthPlaceCityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addressesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("addressesPanel.border.title"))); // NOI18N
        addressesPanel.setName("addressesPanel"); // NOI18N
        addressesPanel.setTitle(resourceMap.getString("addressesPanel.title")); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        addressesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        addressesTable.setName("addressesTable"); // NOI18N
        jScrollPane1.setViewportView(addressesTable);

        javax.swing.GroupLayout addressesPanelLayout = new javax.swing.GroupLayout(addressesPanel);
        addressesPanel.setLayout(addressesPanelLayout);
        addressesPanelLayout.setHorizontalGroup(
            addressesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addressesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        addressesPanelLayout.setVerticalGroup(
            addressesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        passportsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("passportsPanel.border.title"))); // NOI18N
        passportsPanel.setName("passportsPanel"); // NOI18N
        passportsPanel.setTitle(resourceMap.getString("passportsPanel.title")); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        passportsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        passportsTable.setName("passportsTable"); // NOI18N
        jScrollPane2.setViewportView(passportsTable);

        javax.swing.GroupLayout passportsPanelLayout = new javax.swing.GroupLayout(passportsPanel);
        passportsPanel.setLayout(passportsPanelLayout);
        passportsPanelLayout.setHorizontalGroup(
            passportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passportsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        passportsPanelLayout.setVerticalGroup(
            passportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passportsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        buttonPanel.setName("buttonPanel"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getActionMap(PersonPanel.class, this);
        closelButton.setAction(actionMap.get("closeAction")); // NOI18N
        closelButton.setText(resourceMap.getString("closelButton.text")); // NOI18N
        closelButton.setName("closelButton"); // NOI18N

        saveButton.setAction(actionMap.get("saveAction")); // NOI18N
        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(544, Short.MAX_VALUE)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        descriptionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("descriptionPanel.border.title"))); // NOI18N
        descriptionPanel.setName("descriptionPanel"); // NOI18N

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        descriptionTextPane.setName("descriptionTextPane"); // NOI18N
        jScrollPane3.setViewportView(descriptionTextPane);

        javax.swing.GroupLayout descriptionPanelLayout = new javax.swing.GroupLayout(descriptionPanel);
        descriptionPanel.setLayout(descriptionPanelLayout);
        descriptionPanelLayout.setHorizontalGroup(
            descriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                .addContainerGap())
        );
        descriptionPanelLayout.setVerticalGroup(
            descriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(descriptionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(personalDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(birthDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addressesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passportsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passportsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBPanel addressesPanel;
    private com.cosmos.acacia.gui.AcaciaTable addressesTable;
    private com.cosmos.swingb.JBPanel birthDataPanel;
    private com.cosmos.swingb.JBComboBox birthPlaceCityComboBox;
    private com.cosmos.swingb.JBComboBox birthPlaceCountryComboBox;
    private com.cosmos.swingb.JBDatePicker birthdateDatePicker;
    private javax.swing.JLabel birthdateLabel;
    private com.cosmos.swingb.JBPanel buttonPanel;
    private javax.swing.JLabel cityLabel;
    private com.cosmos.swingb.JBButton closelButton;
    private javax.swing.JLabel countryLabel;
    private com.cosmos.swingb.JBPanel descriptionPanel;
    private com.cosmos.swingb.JBTextPane descriptionTextPane;
    private javax.swing.JLabel extraNameLabel;
    private com.cosmos.swingb.JBTextField extraNameTextField;
    private javax.swing.JLabel firstNameLabel;
    private com.cosmos.swingb.JBTextField firstNameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lastNameLabel;
    private com.cosmos.swingb.JBTextField lastNameTextField;
    private com.cosmos.swingb.JBPanel passportsPanel;
    private com.cosmos.acacia.gui.AcaciaTable passportsTable;
    private com.cosmos.swingb.JBPanel personalDataPanel;
    private javax.swing.JLabel personalUniqueIdLabel;
    private com.cosmos.swingb.JBTextField personalUniqueIdTextField;
    private com.cosmos.swingb.JBButton saveButton;
    private javax.swing.JLabel secondNameLabel;
    private com.cosmos.swingb.JBTextField secondNameTextField;
    // End of variables declaration//GEN-END:variables

    @EJB
    private PersonsListRemote formSession;

    private BindingGroup personBindingGroup;
    private Person person;

    @Override
    protected void initData() {
        System.out.println("initData().person: " + person);
        if(person == null)
        {
            person = getFormSession().newPerson();
        }

        personBindingGroup = new BindingGroup();

        EntityProperties entityProps = getPersonEntityProperties();

        firstNameTextField.bind(personBindingGroup, person, entityProps.getPropertyDetails("firstName"));
        secondNameTextField.bind(personBindingGroup, person, entityProps.getPropertyDetails("secondName"));
        lastNameTextField.bind(personBindingGroup, person, entityProps.getPropertyDetails("lastName"));
        extraNameTextField.bind(personBindingGroup, person, entityProps.getPropertyDetails("extraName"));

        personalUniqueIdTextField.bind(personBindingGroup, person, entityProps.getPropertyDetails("personalUniqueId"));
        birthdateDatePicker.bind(personBindingGroup, person, entityProps.getPropertyDetails("birthDate"));
        birthPlaceCountryComboBox.bind(personBindingGroup, getCountries(), person, "birthPlaceCountry");
        birthPlaceCityComboBox.bind(personBindingGroup, getCities(), person, "birthPlaceCity");
        
        descriptionTextPane.bind(personBindingGroup, person, "desceription");
        
        JTableBinding addressesTableBinding = addressesTable.bind(personBindingGroup, getAddresses(), getAddressEntityProperties());
        JTableBinding passportsTableBinding = passportsTable.bind(personBindingGroup, getPassports(), getPassportEntityProperties());
        personBindingGroup.bind();
    }

        protected PersonsListRemote getFormSession()
    {
        if(formSession == null)
        {
            try
            {
                formSession = InitialContext.doLookup(PersonsListRemote.class.getName());
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }

        return formSession;
    }
    
    @Action
    public void saveAction() {
        try
        {
            System.out.println("Save: person: " + person);
            person = getFormSession().savePerson(person);
            setDialogResponse(DialogResponse.SAVE);
            setSelectedValue(person);
            close();
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
            // TODO: Log that error
            ResourceMap resource = getResourceMap();
            String title = resource.getString("saveAction.Action.error.title");
            String basicMessage = resource.getString("saveAction.Action.error.basicMessage", ex.getMessage());
            String detailedMessage = resource.getString("saveAction.Action.error.detailedMessage");
            String category = PersonPanel.class.getName() + ": saveAction.";
            Level errorLevel = Level.WARNING;
            Map<String, String> state = new HashMap();
            state.put("personId", String.valueOf(person.getPersonId()));
            state.put("firstName", String.valueOf(person.getFirstName()));
            state.put("secondName", String.valueOf(person.getSecondName()));
            state.put("lastName", String.valueOf(person.getLastName()));
            state.put("extraName", String.valueOf(person.getExtraName()));
            state.put("personalUniqueId", String.valueOf(person.getPersonalUniqueId()));
            ErrorInfo errorInfo = new ErrorInfo(title, basicMessage, detailedMessage, category, ex, errorLevel, state);
            JBErrorPane.showDialog(this, errorInfo);
        }
    }
    
    @Action
    public void closeAction() {
        setDialogResponse(DialogResponse.CLOSE);
        close();
    }
         
    protected EntityProperties getPersonEntityProperties()
    {
        return getFormSession().getPersonEntityProperties();
    }

    protected EntityProperties getAddressEntityProperties()
    {
        return getFormSession().getAddressEntityProperties();
    }

    protected EntityProperties getPassportEntityProperties()
    {
        return getFormSession().getPassportEntityProperties();
    }

    private List<Country> getCountries()
    {
        return getFormSession().getCountries();
    }

    private List<City> getCities()
    {
        return getFormSession().getCities();
    }

    public List<Address> getAddresses()
    {
        return getFormSession().getAddresses(getParentDataObject());
    }

    public List<Passport> getPassports()
    {
        return getFormSession().getPassports(getParentDataObject());
    }
}
