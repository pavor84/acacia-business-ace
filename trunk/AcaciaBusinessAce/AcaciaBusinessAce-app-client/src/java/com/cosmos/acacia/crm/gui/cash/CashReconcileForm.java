/*
 * CashReconcileForm.java
 *
 * Created on Вторник, 2009, Април 14, 16:01
 */

package com.cosmos.acacia.crm.gui.cash;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JOptionPane;

import org.jdesktop.application.Action;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;

import com.cosmos.acacia.crm.bl.cash.CashReconcileRemote;
import com.cosmos.acacia.crm.bl.cash.EndBalance;
import com.cosmos.acacia.crm.bl.contactbook.PersonsListRemote;
import com.cosmos.acacia.crm.data.CashReconcile;
import com.cosmos.acacia.crm.data.CashReconcilePaymentSummary;
import com.cosmos.acacia.crm.data.Person;
import com.cosmos.acacia.crm.enums.Currency;
import com.cosmos.acacia.crm.enums.DocumentStatus;
import com.cosmos.acacia.crm.gui.contactbook.BusinessPartnersListPanel;
import com.cosmos.acacia.gui.AbstractTablePanel;
import com.cosmos.acacia.gui.AbstractTablePanelListener;
import com.cosmos.acacia.gui.BaseEntityPanel;
import com.cosmos.acacia.gui.EntityFormButtonPanel;
import com.cosmos.acacia.gui.AbstractTablePanel.Button;
import com.cosmos.acacia.util.AcaciaUtils;
import com.cosmos.beansbinding.EntityProperties;
import com.cosmos.beansbinding.PropertyDetails;
import com.cosmos.swingb.DefaultSelectableListDialog;
import com.cosmos.swingb.DialogResponse;
import com.cosmos.swingb.JBButton;
import com.cosmos.swingb.JBColumn;
import com.cosmos.swingb.JBLabel;
import com.cosmos.swingb.listeners.NestedFormListener;
import com.cosmos.swingb.listeners.TableModificationListener;

/**
 * 
 * Created	:	28.04.2009
 * @author	Petar Milev
 *
 */
public class CashReconcileForm extends BaseEntityPanel {
    
    private CashReconcile entity;
    
    private BindingGroup bindGroup;
    private CashReconcileRemote formSession = getBean(CashReconcileRemote.class);
    private PersonsListRemote personManager = getBean(PersonsListRemote.class);
    private EntityProperties entProps;
    
    private BanknoteQuantityListPanel banknotesPanel;

    /** Creates new form */
    public CashReconcileForm(CashReconcile cashReconcile) {
        super(cashReconcile.getParentId());
        this.entity = cashReconcile;
        initialize();
    }

    private void initialize() {
        initComponents();
        initComponentsCustom();
        init();
    }

    private void initComponentsCustom() {
        //add banknotes panel
        banknotesPanel = new BanknoteQuantityListPanel(entity);
        banknotesPanel.addTableModificationListener(new TableModificationListener() {
            public void rowModified(Object row) {
                updateTotalBanknotes();
            }
            public void rowDeleted(Object row) {
                updateTotalBanknotes();
            }
            public void rowAdded(Object row) {
                updateTotalBanknotes();
            }
        });
        banknotesPanel.addTablePanelListener(new AbstractTablePanelListener() {
            @Override
            public void tableRefreshed() {
                updateTotalBanknotes();
            }
        });
        banknotesPanel.setVisible(Button.Refresh, false);
        banknotesPanel.setVisible(Button.Close, false);
        
        addNestedFormListener(banknotesPanel);
        banknotesTableHolderPanel.add(banknotesPanel);
        totalField.setFormat(AcaciaUtils.getDecimalFormat());
        updateTotalBanknotes();
        
        //add buttons panel
        entityFormButtonPanel = new EntityFormButtonPanel();
        BoxLayout boxLayout = new BoxLayout(footerPanel, BoxLayout.Y_AXIS);
        footerPanel.setLayout(boxLayout);
        footerPanel.add(entityFormButtonPanel);
    }

    protected void updateTotalBanknotes() {
        BigDecimal value = banknotesPanel.getTotalAmount();
        totalField.setValue(value);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        acaciaTable2 = new com.cosmos.acacia.gui.AcaciaTable();
        jBTabbedPane1 = new com.cosmos.swingb.JBTabbedPane();
        jBPanel1 = new com.cosmos.swingb.JBPanel();
        jBLabel1 = new com.cosmos.swingb.JBLabel();
        documentNumberField = new com.cosmos.swingb.JBTextField();
        jBLabel4 = new com.cosmos.swingb.JBLabel();
        officerInChargeField = new com.cosmos.acacia.gui.AcaciaComboList();
        jBLabel5 = new com.cosmos.swingb.JBLabel();
        cashierField = new com.cosmos.acacia.gui.AcaciaComboList();
        jBLabel6 = new com.cosmos.swingb.JBLabel();
        initialCashLabel = new com.cosmos.swingb.JBLabel();
        jBPanel6 = new com.cosmos.swingb.JBPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        endBalanceTable = new com.cosmos.acacia.gui.AcaciaTable();
        initialBankLabel = new com.cosmos.swingb.JBLabel();
        initialBalanceLabel = new com.cosmos.swingb.JBLabel();
        periodRevenueLabel = new com.cosmos.swingb.JBLabel();
        periodExpenseLabel = new com.cosmos.swingb.JBLabel();
        endBalanceLabel = new com.cosmos.swingb.JBLabel();
        jBPanel7 = new com.cosmos.swingb.JBPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesField = new com.cosmos.swingb.JBTextPane();
        initialCashField = new com.cosmos.swingb.JBFormattedTextField();
        initialBankField = new com.cosmos.swingb.JBFormattedTextField();
        initialBalanceField = new com.cosmos.swingb.JBFormattedTextField();
        preiodRevenueField = new com.cosmos.swingb.JBFormattedTextField();
        periodExpensesField = new com.cosmos.swingb.JBFormattedTextField();
        endBalanceField = new com.cosmos.swingb.JBFormattedTextField();
        documentDateField = new com.cosmos.swingb.JBTextField();
        jBPanel2 = new com.cosmos.swingb.JBPanel();
        jBPanel4 = new com.cosmos.swingb.JBPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        revenuesTable = new com.cosmos.acacia.gui.AcaciaTable();
        periodRevenueLabel2 = new com.cosmos.swingb.JBLabel();
        revenueField = new com.cosmos.swingb.JBFormattedTextField();
        bankRevenueField = new com.cosmos.swingb.JBFormattedTextField();
        cashRevenueField = new com.cosmos.swingb.JBFormattedTextField();
        periodCashRevenueLabel = new com.cosmos.swingb.JBLabel();
        periodBankRevenueLabel = new com.cosmos.swingb.JBLabel();
        jBPanel5 = new com.cosmos.swingb.JBPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        expensesTable = new com.cosmos.acacia.gui.AcaciaTable();
        expensesField = new com.cosmos.swingb.JBFormattedTextField();
        periodExpensesLabel2 = new com.cosmos.swingb.JBLabel();
        bankExpensesField = new com.cosmos.swingb.JBFormattedTextField();
        cashExpensesField = new com.cosmos.swingb.JBFormattedTextField();
        periodCashExpensesLabel = new com.cosmos.swingb.JBLabel();
        periodBankExpensesLabel = new com.cosmos.swingb.JBLabel();
        jBPanel3 = new com.cosmos.swingb.JBPanel();
        totalField = new com.cosmos.swingb.JBFormattedTextField();
        totalLabel = new com.cosmos.swingb.JBLabel();
        banknotesTableHolderPanel = new com.cosmos.acacia.gui.TableHolderPanel();
        footerPanel = new com.cosmos.swingb.JBPanel();

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        acaciaTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        acaciaTable2.setName("acaciaTable2"); // NOI18N
        jScrollPane2.setViewportView(acaciaTable2);

        setName("Form"); // NOI18N

        jBTabbedPane1.setName("jBTabbedPane1"); // NOI18N

        jBPanel1.setName("jBPanel1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(CashReconcileForm.class);
        jBLabel1.setText(resourceMap.getString("jBLabel1.text")); // NOI18N
        jBLabel1.setName("jBLabel1"); // NOI18N

        documentNumberField.setEditable(false);
        documentNumberField.setText(resourceMap.getString("documentNumberField.text")); // NOI18N
        documentNumberField.setName("documentNumberField"); // NOI18N

        jBLabel4.setText(resourceMap.getString("jBLabel4.text")); // NOI18N
        jBLabel4.setName("jBLabel4"); // NOI18N

        officerInChargeField.setEnabled(false);
        officerInChargeField.setName("officerInChargeField"); // NOI18N

        jBLabel5.setText(resourceMap.getString("jBLabel5.text")); // NOI18N
        jBLabel5.setName("jBLabel5"); // NOI18N

        cashierField.setName("cashierField"); // NOI18N

        jBLabel6.setText(resourceMap.getString("jBLabel6.text")); // NOI18N
        jBLabel6.setName("jBLabel6"); // NOI18N

        initialCashLabel.setText(resourceMap.getString("initialCashLabel.text")); // NOI18N
        initialCashLabel.setName("initialCashLabel"); // NOI18N

        jBPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jBPanel6.border.title"))); // NOI18N
        jBPanel6.setName("jBPanel6"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        endBalanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"BGN", "100", "100"},
                {"EUR", "1000", "1956"},
                {"USD", "10000", "14500"},
                {null, null, null}
            },
            new String [] {
                "Currency", "Amount", "Amount ({0})"
            }
        ));
        endBalanceTable.setName("endBalanceTable"); // NOI18N
        jScrollPane5.setViewportView(endBalanceTable);
        endBalanceTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("endBalanceTable.columnModel.title0")); // NOI18N
        endBalanceTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("endBalanceTable.columnModel.title1")); // NOI18N
        endBalanceTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("endBalanceTable.columnModel.title2")); // NOI18N

        javax.swing.GroupLayout jBPanel6Layout = new javax.swing.GroupLayout(jBPanel6);
        jBPanel6.setLayout(jBPanel6Layout);
        jBPanel6Layout.setHorizontalGroup(
            jBPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                .addContainerGap())
        );
        jBPanel6Layout.setVerticalGroup(
            jBPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        initialBankLabel.setText(resourceMap.getString("initialBankLabel.text")); // NOI18N
        initialBankLabel.setName("initialBankLabel"); // NOI18N

        initialBalanceLabel.setText(resourceMap.getString("initialBalanceLabel.text")); // NOI18N
        initialBalanceLabel.setName("initialBalanceLabel"); // NOI18N

        periodRevenueLabel.setText(resourceMap.getString("periodRevenueLabel.text")); // NOI18N
        periodRevenueLabel.setName("periodRevenueLabel"); // NOI18N

        periodExpenseLabel.setText(resourceMap.getString("periodExpenseLabel.text")); // NOI18N
        periodExpenseLabel.setName("periodExpenseLabel"); // NOI18N

        endBalanceLabel.setText(resourceMap.getString("endBalanceLabel.text")); // NOI18N
        endBalanceLabel.setName("endBalanceLabel"); // NOI18N

        jBPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jBPanel7.border.title"))); // NOI18N
        jBPanel7.setName("jBPanel7"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        notesField.setName("notesField"); // NOI18N
        jScrollPane1.setViewportView(notesField);

        javax.swing.GroupLayout jBPanel7Layout = new javax.swing.GroupLayout(jBPanel7);
        jBPanel7.setLayout(jBPanel7Layout);
        jBPanel7Layout.setHorizontalGroup(
            jBPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                .addContainerGap())
        );
        jBPanel7Layout.setVerticalGroup(
            jBPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        initialCashField.setEditable(false);
        initialCashField.setText(resourceMap.getString("initialCashField.text")); // NOI18N
        initialCashField.setMinimumSize(new java.awt.Dimension(127, 20));
        initialCashField.setName("initialCashField"); // NOI18N
        initialCashField.setPreferredSize(new java.awt.Dimension(127, 20));

        initialBankField.setEditable(false);
        initialBankField.setName("initialBankField"); // NOI18N

        initialBalanceField.setEditable(false);
        initialBalanceField.setName("initialBalanceField"); // NOI18N

        preiodRevenueField.setEditable(false);
        preiodRevenueField.setName("preiodRevenueField"); // NOI18N

        periodExpensesField.setEditable(false);
        periodExpensesField.setName("periodExpensesField"); // NOI18N

        endBalanceField.setEditable(false);
        endBalanceField.setName("endBalanceField"); // NOI18N

        documentDateField.setEditable(false);
        documentDateField.setText(resourceMap.getString("documentDateField.text")); // NOI18N
        documentDateField.setName("documentDateField"); // NOI18N

        javax.swing.GroupLayout jBPanel1Layout = new javax.swing.GroupLayout(jBPanel1);
        jBPanel1.setLayout(jBPanel1Layout);
        jBPanel1Layout.setHorizontalGroup(
            jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jBPanel1Layout.createSequentialGroup()
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cashierField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(officerInChargeField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(documentNumberField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(documentDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(initialBalanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(periodRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(periodExpenseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(initialBankLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel1Layout.createSequentialGroup()
                                    .addComponent(initialCashLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addGap(24, 24, 24)))
                            .addComponent(endBalanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initialBankField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(initialBalanceField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(preiodRevenueField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(periodExpensesField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(endBalanceField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(initialCashField, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jBPanel1Layout.setVerticalGroup(
            jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialCashLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialCashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialBankLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialBankField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(officerInChargeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(initialBalanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(initialBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jBLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBPanel1Layout.createSequentialGroup()
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(periodRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preiodRevenueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(periodExpenseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(periodExpensesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jBLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cashierField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endBalanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBTabbedPane1.addTab(resourceMap.getString("jBPanel1.TabConstraints.tabTitle"), jBPanel1); // NOI18N

        jBPanel2.setName("jBPanel2"); // NOI18N

        jBPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jBPanel4.border.title"))); // NOI18N
        jBPanel4.setName("jBPanel4"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        revenuesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Payment Type", "Currency", "Amount", "Amount in [BGN]"
            }
        ));
        revenuesTable.setName("revenuesTable"); // NOI18N
        jScrollPane3.setViewportView(revenuesTable);
        revenuesTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("revenuesTable.columnModel.title0")); // NOI18N
        revenuesTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("revenuesTable.columnModel.title1")); // NOI18N
        revenuesTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("revenuesTable.columnModel.title2")); // NOI18N
        revenuesTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("revenuesTable.columnModel.title3")); // NOI18N

        periodRevenueLabel2.setText(resourceMap.getString("periodRevenueLabel2.text")); // NOI18N
        periodRevenueLabel2.setName("periodRevenueLabel2"); // NOI18N

        revenueField.setEditable(false);
        revenueField.setText(resourceMap.getString("revenueField.text")); // NOI18N
        revenueField.setName("revenueField"); // NOI18N

        bankRevenueField.setEditable(false);
        bankRevenueField.setName("bankRevenueField"); // NOI18N

        cashRevenueField.setEditable(false);
        cashRevenueField.setName("cashRevenueField"); // NOI18N

        periodCashRevenueLabel.setText(resourceMap.getString("periodCashRevenueLabel.text")); // NOI18N
        periodCashRevenueLabel.setName("periodCashRevenueLabel"); // NOI18N

        periodBankRevenueLabel.setText(resourceMap.getString("periodBankRevenueLabel.text")); // NOI18N
        periodBankRevenueLabel.setName("periodBankRevenueLabel"); // NOI18N

        javax.swing.GroupLayout jBPanel4Layout = new javax.swing.GroupLayout(jBPanel4);
        jBPanel4.setLayout(jBPanel4Layout);
        jBPanel4Layout.setHorizontalGroup(
            jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel4Layout.createSequentialGroup()
                            .addComponent(periodBankRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bankRevenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel4Layout.createSequentialGroup()
                            .addComponent(periodCashRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cashRevenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel4Layout.createSequentialGroup()
                            .addComponent(periodRevenueLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(52, 52, 52)
                            .addComponent(revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jBPanel4Layout.setVerticalGroup(
            jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashRevenueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodCashRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankRevenueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodBankRevenueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodRevenueLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jBPanel5.border.title"))); // NOI18N
        jBPanel5.setName("jBPanel5"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        expensesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Payment Type", "Currency", "Amount", "Amount in [BGN]"
            }
        ));
        expensesTable.setName("expensesTable"); // NOI18N
        jScrollPane4.setViewportView(expensesTable);
        expensesTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("expensesTable.columnModel.title0")); // NOI18N
        expensesTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("expensesTable.columnModel.title1")); // NOI18N
        expensesTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("expensesTable.columnModel.title2")); // NOI18N
        expensesTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("expensesTable.columnModel.title3")); // NOI18N

        expensesField.setEditable(false);
        expensesField.setName("expensesField"); // NOI18N

        periodExpensesLabel2.setText(resourceMap.getString("periodExpensesLabel2.text")); // NOI18N
        periodExpensesLabel2.setName("periodExpensesLabel2"); // NOI18N

        bankExpensesField.setEditable(false);
        bankExpensesField.setName("bankExpensesField"); // NOI18N

        cashExpensesField.setEditable(false);
        cashExpensesField.setName("cashExpensesField"); // NOI18N

        periodCashExpensesLabel.setText(resourceMap.getString("periodCashExpensesLabel.text")); // NOI18N
        periodCashExpensesLabel.setName("periodCashExpensesLabel"); // NOI18N

        periodBankExpensesLabel.setText(resourceMap.getString("periodBankExpensesLabel.text")); // NOI18N
        periodBankExpensesLabel.setName("periodBankExpensesLabel"); // NOI18N

        javax.swing.GroupLayout jBPanel5Layout = new javax.swing.GroupLayout(jBPanel5);
        jBPanel5.setLayout(jBPanel5Layout);
        jBPanel5Layout.setHorizontalGroup(
            jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                    .addGroup(jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel5Layout.createSequentialGroup()
                            .addComponent(periodBankExpensesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bankExpensesField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel5Layout.createSequentialGroup()
                            .addComponent(periodCashExpensesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cashExpensesField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel5Layout.createSequentialGroup()
                            .addComponent(periodExpensesLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(expensesField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jBPanel5Layout.setVerticalGroup(
            jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashExpensesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodCashExpensesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankExpensesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodBankExpensesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expensesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodExpensesLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jBPanel2Layout = new javax.swing.GroupLayout(jBPanel2);
        jBPanel2.setLayout(jBPanel2Layout);
        jBPanel2Layout.setHorizontalGroup(
            jBPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jBPanel2Layout.setVerticalGroup(
            jBPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBPanel2Layout.createSequentialGroup()
                .addComponent(jBPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBTabbedPane1.addTab(resourceMap.getString("jBPanel2.TabConstraints.tabTitle"), jBPanel2); // NOI18N

        jBPanel3.setName("jBPanel3"); // NOI18N

        totalField.setEditable(false);
        totalField.setText(resourceMap.getString("totalField.text")); // NOI18N
        totalField.setName("totalField"); // NOI18N

        totalLabel.setText(resourceMap.getString("totalLabel.text")); // NOI18N
        totalLabel.setName("totalLabel"); // NOI18N

        banknotesTableHolderPanel.setName("banknotesTableHolderPanel"); // NOI18N

        javax.swing.GroupLayout banknotesTableHolderPanelLayout = new javax.swing.GroupLayout(banknotesTableHolderPanel);
        banknotesTableHolderPanel.setLayout(banknotesTableHolderPanelLayout);
        banknotesTableHolderPanelLayout.setHorizontalGroup(
            banknotesTableHolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 891, Short.MAX_VALUE)
        );
        banknotesTableHolderPanelLayout.setVerticalGroup(
            banknotesTableHolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 529, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jBPanel3Layout = new javax.swing.GroupLayout(jBPanel3);
        jBPanel3.setLayout(jBPanel3Layout);
        jBPanel3Layout.setHorizontalGroup(
            jBPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel3Layout.createSequentialGroup()
                .addContainerGap(591, Short.MAX_VALUE)
                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(banknotesTableHolderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jBPanel3Layout.setVerticalGroup(
            jBPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBPanel3Layout.createSequentialGroup()
                .addComponent(banknotesTableHolderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBTabbedPane1.addTab(resourceMap.getString("jBPanel3.TabConstraints.tabTitle"), jBPanel3); // NOI18N

        footerPanel.setName("footerPanel"); // NOI18N

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 896, Short.MAX_VALUE)
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(footerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jBTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.acacia.gui.AcaciaTable acaciaTable2;
    private com.cosmos.swingb.JBFormattedTextField bankExpensesField;
    private com.cosmos.swingb.JBFormattedTextField bankRevenueField;
    private com.cosmos.acacia.gui.TableHolderPanel banknotesTableHolderPanel;
    private com.cosmos.swingb.JBFormattedTextField cashExpensesField;
    private com.cosmos.swingb.JBFormattedTextField cashRevenueField;
    private com.cosmos.acacia.gui.AcaciaComboList cashierField;
    private com.cosmos.swingb.JBTextField documentDateField;
    private com.cosmos.swingb.JBTextField documentNumberField;
    private com.cosmos.swingb.JBFormattedTextField endBalanceField;
    private com.cosmos.swingb.JBLabel endBalanceLabel;
    private com.cosmos.acacia.gui.AcaciaTable endBalanceTable;
    private com.cosmos.swingb.JBFormattedTextField expensesField;
    private com.cosmos.acacia.gui.AcaciaTable expensesTable;
    private com.cosmos.swingb.JBPanel footerPanel;
    private com.cosmos.swingb.JBFormattedTextField initialBalanceField;
    private com.cosmos.swingb.JBLabel initialBalanceLabel;
    private com.cosmos.swingb.JBFormattedTextField initialBankField;
    private com.cosmos.swingb.JBLabel initialBankLabel;
    private com.cosmos.swingb.JBFormattedTextField initialCashField;
    private com.cosmos.swingb.JBLabel initialCashLabel;
    private com.cosmos.swingb.JBLabel jBLabel1;
    private com.cosmos.swingb.JBLabel jBLabel4;
    private com.cosmos.swingb.JBLabel jBLabel5;
    private com.cosmos.swingb.JBLabel jBLabel6;
    private com.cosmos.swingb.JBPanel jBPanel1;
    private com.cosmos.swingb.JBPanel jBPanel2;
    private com.cosmos.swingb.JBPanel jBPanel3;
    private com.cosmos.swingb.JBPanel jBPanel4;
    private com.cosmos.swingb.JBPanel jBPanel5;
    private com.cosmos.swingb.JBPanel jBPanel6;
    private com.cosmos.swingb.JBPanel jBPanel7;
    private com.cosmos.swingb.JBTabbedPane jBTabbedPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.cosmos.swingb.JBTextPane notesField;
    private com.cosmos.acacia.gui.AcaciaComboList officerInChargeField;
    private com.cosmos.swingb.JBLabel periodBankExpensesLabel;
    private com.cosmos.swingb.JBLabel periodBankRevenueLabel;
    private com.cosmos.swingb.JBLabel periodCashExpensesLabel;
    private com.cosmos.swingb.JBLabel periodCashRevenueLabel;
    private com.cosmos.swingb.JBLabel periodExpenseLabel;
    private com.cosmos.swingb.JBFormattedTextField periodExpensesField;
    private com.cosmos.swingb.JBLabel periodExpensesLabel2;
    private com.cosmos.swingb.JBLabel periodRevenueLabel;
    private com.cosmos.swingb.JBLabel periodRevenueLabel2;
    private com.cosmos.swingb.JBFormattedTextField preiodRevenueField;
    private com.cosmos.swingb.JBFormattedTextField revenueField;
    private com.cosmos.acacia.gui.AcaciaTable revenuesTable;
    private com.cosmos.swingb.JBFormattedTextField totalField;
    private com.cosmos.swingb.JBLabel totalLabel;
    // End of variables declaration//GEN-END:variables
    private EntityFormButtonPanel entityFormButtonPanel;
    
    @Override
    public BindingGroup getBindingGroup() {
        return bindGroup;
    }

    @Override
    public EntityFormButtonPanel getButtonPanel() {
        return entityFormButtonPanel;
    }

    @Override
    public Object getEntity() {
        return entity;
    }

    @SuppressWarnings("deprecation")
    @Override
    public void performSave(boolean closeAfter) {
        entity = formSession.saveCashReconcile(entity);
        setDialogResponse(DialogResponse.SAVE);
        setSelectedValue(entity);
        if (closeAfter)
            close();
    }

    @Override
    protected void initData() {
        
        if (entProps == null)
            entProps = getFormSession().getDetailEntityProperties();

        if (bindGroup == null)
            bindGroup = new BindingGroup();

        beforeBind();
        bind();
        afterBind();
    }
    
    private void beforeBind() {
        //cashiers list panel
        List<Person> branchCashiers = personManager.getCashiers();
        cashiersPanel = new BusinessPartnersListPanel(branchCashiers, null);
        cashiersPanel.setClassifierVisible(false);
        cashiersPanel.setVisible(Button.New, false);
        cashiersPanel.setVisible(Button.Modify, false);
        cashiersPanel.setVisible(Button.Delete, false);
        cashiersPanel.setVisible(Button.Special, false);
        cashiersPanel.setVisible(Button.Classify, false);
        if ( branchCashiers.size()==1 && entity.getCashier()==null )
            entity.setCashier(branchCashiers.get(0));
        
        //labels
        String currencyDisplay = ((Currency)entity.getCurrency().getEnumValue()).getCode();
        setLabelCurrency(initialCashLabel, currencyDisplay);
        setLabelCurrency(initialBankLabel, currencyDisplay);
        setLabelCurrency(initialBalanceLabel, currencyDisplay);
        setLabelCurrency(periodRevenueLabel, currencyDisplay);
        setLabelCurrency(periodExpenseLabel, currencyDisplay);
        setLabelCurrency(endBalanceLabel, currencyDisplay);
        setLabelCurrency(periodCashRevenueLabel, currencyDisplay);
        setLabelCurrency(periodBankRevenueLabel, currencyDisplay);
        setLabelCurrency(periodRevenueLabel2, currencyDisplay);
        setLabelCurrency(periodCashExpensesLabel, currencyDisplay);
        setLabelCurrency(periodBankExpensesLabel, currencyDisplay);
        setLabelCurrency(periodExpensesLabel2, currencyDisplay);
        setLabelCurrency(totalLabel, currencyDisplay);
        
        //get payment summaries
        //getPaymentSummaries();
    }

    private void setLabelCurrency(JBLabel label, String currencyDisplay) {
        String text = label.getText();
        if ( !text.contains("{0}") )
            return;
        text = MessageFormat.format(text, currencyDisplay);
        label.setText(text);
    }

    private void afterBind() {
        //complete button
        if ( DocumentStatus.Draft.equals(entity.getDocumentStatus().getEnumValue()) ){
            addButton("button.complete", "onCompleteButton");
        }
        
        //revenues table
        BindingGroup bg = new BindingGroup();
        EntityProperties paymentSummaryListProps = getFormSession().getPaymentSummaryListDetails();
        List<CashReconcilePaymentSummary> revenuePayments = entity.getRevenuePayments();
        revenuesTable.bind(bg, revenuePayments, paymentSummaryListProps, UpdateStrategy.READ, getAmtDefaultCurrencyCol(), false);
        
        //expenses table
        List<CashReconcilePaymentSummary> expensesPayments = entity.getExpensesPayments();
        expensesTable.bind(bg, expensesPayments, 
            paymentSummaryListProps, UpdateStrategy.READ, getAmtDefaultCurrencyCol(), false);
        
        bg.bind();
    }
    
    private List<JBColumn> getAmtDefaultCurrencyCol() {
        final String colName = MessageFormat.format(getResourceMap().getString("column.amountDefaultCurrency"), 
            ((Currency)entity.getCurrency().getEnumValue()).getCode());
        JBColumn jc = new JBColumn(){
            public String getColumnName() {
                return colName;
            }
            public Class getColumnClass() {
                return BigDecimal.class;
            }
            public Object getValue(Object item) {
                CashReconcilePaymentSummary payment = (CashReconcilePaymentSummary) item;
                return Currency.convertAmount((Currency)entity.getCurrency().getEnumValue(),
                    (Currency)payment.getCurrency().getEnumValue(), payment.getAmount());
            }
            public void setValue(Object arg0, Object arg1) {
            }
            public int getIndex() {
                return 3;
            }
        };
        return Arrays.asList(new JBColumn[]{jc});
    }

//    private List<PropertyDetails> createPaymentSummaryColumns() {
//        List<PropertyDetails> result = new ArrayList<PropertyDetails>();
//        result.add(new PropertyDetails("paymentType", getResourceMap().getString("column.paymentType"), Currency.class.getName(),10));
//        result.add(new PropertyDetails("currency", getResourceMap().getString("column.currency"), Currency.class.getName(),20));
//        result.add(new PropertyDetails("amount", getResourceMap().getString("column.amount"), BigDecimal.class.getName(),30));
//        return result;
//    }

    @Action
    public void onCompleteButton(){
        if ( showConfirmationDialog(getResourceMap().getString("button.complete.confirm")) ){
            entity = getFormSession().completeCashReconcile(entity);
            setSelectedValue(entity);
            setDialogResponse(DialogResponse.SAVE);
            close();
        }
    }
    
    private JBButton addButton(String textKey, String action){
        JBButton button = new JBButton();
        button.setAction(getContext().getActionMap(this).get(action));
        button.setText(getResourceMap().getString(textKey));
        entityFormButtonPanel.addButton(button);
        return button;
    }
    
    private BusinessPartnersListPanel cashiersPanel;

    /**
     * Just binds all components
     */
    @SuppressWarnings("deprecation")
    protected void bind() {
        
        //document number
        documentNumberField.bind(bindGroup, entity, entProps.getPropertyDetails("documentNumber"), UpdateStrategy.READ);
        
        //document date
        if ( entity.getDocumentDate()!=null )
            documentDateField.setText(AcaciaUtils.getDateTimeFormat().format(entity.getDocumentDate()));
        
        //officer in charge
        officerInChargeField.initUnbound(new DefaultSelectableListDialog(){
            @Override
            public List getListData() {
                return Arrays.asList(new Person[]{entity.getPublisherOfficer()});
            }
        }, "${displayName}");
        officerInChargeField.setSelectedItem(entity.getPublisherOfficer());
        
        //cashier
        cashierField.bind(bindGroup, cashiersPanel, entity, entProps.getPropertyDetails("cashier"));
        
        //initial cash
        initialCashField.bind(bindGroup, entity, entProps.getPropertyDetails("initialCashBalance"), AcaciaUtils.getDecimalFormat());
        
        //initial bank
        initialBankField.bind(bindGroup, entity, entProps.getPropertyDetails("initialBankBalance"), AcaciaUtils.getDecimalFormat());

        //initial balance
        initialBalanceField.bind(bindGroup, entity, entProps.getPropertyDetails("initialBalance"), AcaciaUtils.getDecimalFormat());
        
        //period revenue
        preiodRevenueField.bind(bindGroup, entity, entProps.getPropertyDetails("periodRevenue"), AcaciaUtils.getDecimalFormat());
        
        //period expenses
        periodExpensesField.bind(bindGroup, entity, entProps.getPropertyDetails("periodExpenses"), AcaciaUtils.getDecimalFormat());
        
        //end balance
        endBalanceField.bind(bindGroup, entity, entProps.getPropertyDetails("endBalance"), AcaciaUtils.getDecimalFormat());
        
        //notes
        notesField.bind(bindGroup, entity, entProps.getPropertyDetails("notes"));
        
        //period cash revenue
        cashRevenueField.bind(bindGroup, entity, entProps.getPropertyDetails("periodCashRevenue"), AcaciaUtils.getDecimalFormat());
        
        //period bank revenue
        bankRevenueField.bind(bindGroup, entity, entProps.getPropertyDetails("periodBankRevenue"), AcaciaUtils.getDecimalFormat());
        
        //period revenue
        revenueField.bind(bindGroup, entity, entProps.getPropertyDetails("periodRevenue"), AcaciaUtils.getDecimalFormat());
        
        //period cash expenses
        cashExpensesField.bind(bindGroup, entity, entProps.getPropertyDetails("periodCashExpenses"), AcaciaUtils.getDecimalFormat());
        
        //period bank expenses
        bankExpensesField.bind(bindGroup, entity, entProps.getPropertyDetails("periodBankExpenses"), AcaciaUtils.getDecimalFormat());
        
        //period expenses
        expensesField.bind(bindGroup, entity, entProps.getPropertyDetails("periodExpenses"), AcaciaUtils.getDecimalFormat());
        
        //end balances table
        List<EndBalance> endBalances = getEndBalances();
        endBalanceTable.bind(bindGroup, endBalances, 
            new EntityProperties(createEndBalancesColumns()), UpdateStrategy.READ);
        
        bindGroup.bind();
    }
    
    private List<PropertyDetails> createEndBalancesColumns() {
        List<PropertyDetails> result = new ArrayList<PropertyDetails>();
        result.add(new PropertyDetails("currency.enumValue.code", getResourceMap().getString("column.currency"), String.class.getName(),10));
        result.add(new PropertyDetails("amount", getResourceMap().getString("column.amount"), BigDecimal.class.getName(),20));
        String defaultCurrencyTitle = getResourceMap().getString("column.amountDefaultCurrency");
        if ( defaultCurrencyTitle.contains("{0}"))
            defaultCurrencyTitle = MessageFormat.format(defaultCurrencyTitle, ((Currency)entity.getCurrency().getEnumValue()).getCode());
        result.add(new PropertyDetails("amountDefCurrency", defaultCurrencyTitle, BigDecimal.class.getName(),30));
        return result;
    }

    private List<EndBalance> getEndBalances() {
        if ( DocumentStatus.Completed.equals(entity.getDocumentStatus().getEnumValue()) ){
            return getFormSession().getEndBalances(entity);
        }else {
            return new ArrayList<EndBalance>();
        }
    }

    public CashReconcileRemote getFormSession() {
        return formSession;
    }
    
    @Override
    public void setReadonly() {
        super.setReadonly();
        cashierField.setEnabled(false);
        banknotesPanel.setReadonly();
        endBalanceTable.setEnabled(true);
    }
    
    protected NestedFormListener createNestedFormListener(final AbstractTablePanel table)
    {
        final String dialogMessage = getResourceMap().getString("save.confirm");
        NestedFormListener listener = new NestedFormListener() {

            @Override
            public boolean actionPerformed() {
                if (getDataObject() == null || getDataObject().getDataObjectId()==null)
                {
                    int answer = JOptionPane.showConfirmDialog(
                            CashReconcileForm.this, dialogMessage, "", JOptionPane.OK_CANCEL_OPTION);

                    if (answer == JOptionPane.OK_OPTION && checkFormValidity()) {
                        try {
                            setModifiedResponse(DialogResponse.SAVE);
                            performSave(false);

                            // Checking is special conditions for disabling new window after save are met
                            if (isSpecialConditionPresent() == true)
                                return false;

                        } catch (Exception ex) {
                            checkForValidationException(ex);
                            return false;
                        }

                        BigInteger doId = getDataObject().getDataObjectId();
                        table.setParentDataObjectId(doId);
                        table.setParentDataObjectToAssociatedTables(doId);
                        return true;
                    }
                    return false;
                }
                return true;
            }
        };

        return listener;
    }
}
