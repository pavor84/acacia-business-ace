/*
 * AssemblingSchemaSelectPanel.java
 *
 * Created on Вторник, 2008, Август 26, 0:22
 */

package com.cosmos.acacia.crm.gui.assembling;

import com.cosmos.acacia.gui.AbstractTablePanel;
import com.cosmos.acacia.gui.AbstractTablePanel.Button;
import com.cosmos.acacia.gui.AcaciaPanel;
import com.cosmos.swingb.SelectableListDialog;
import java.util.EnumSet;
import java.util.List;
import java.util.Set;

/**
 *
 * @author  Miro
 */
public class AssemblingSchemaSelectPanel
    extends AcaciaPanel
    implements SelectableListDialog
{

    public enum Mode
    {
        AssembleSchemaSelect(
            Button.Select,
            Button.Unselect,
            Button.Refresh,
            Button.Close),

        AssemblingSchema(
            Button.New,
            Button.Modify,
            Button.Delete,
            Button.Refresh,
            Button.Close),

        AssemblingSchemaSelect(
            Button.Select,
            Button.Unselect,
            Button.New,
            Button.Modify,
            Button.Delete,
            Button.Refresh,
            Button.Close)
        ;

        private Mode(Button firstButton, Button... restButtons)
        {
            this.buttons = EnumSet.of(firstButton, restButtons);
        }

        private Set<Button> buttons;

        public Set<Button> getButtons()
        {
            return buttons;
        }
    }


    /** Creates new form AssemblingSchemaSelectPanel */
    public AssemblingSchemaSelectPanel() {
        initComponents();
        initData();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryPanel = new com.cosmos.swingb.JBPanel();
        categoryLabel = new com.cosmos.swingb.JBLabel();
        categoryComboList = new com.cosmos.acacia.gui.AcaciaComboList();

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        categoryPanel.setName("categoryPanel"); // NOI18N
        categoryPanel.setLayout(new java.awt.BorderLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(AssemblingSchemaSelectPanel.class);
        categoryLabel.setText(resourceMap.getString("categoryLabel.text")); // NOI18N
        categoryLabel.setName("categoryLabel"); // NOI18N
        categoryPanel.add(categoryLabel, java.awt.BorderLayout.WEST);

        categoryComboList.setName("categoryComboList"); // NOI18N
        categoryPanel.add(categoryComboList, java.awt.BorderLayout.CENTER);

        add(categoryPanel, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.acacia.gui.AcaciaComboList categoryComboList;
    private com.cosmos.swingb.JBLabel categoryLabel;
    private com.cosmos.swingb.JBPanel categoryPanel;
    // End of variables declaration//GEN-END:variables


    private boolean editable;
    private Mode mode;
    private AbstractTablePanel tablePanel;

    @Override
    protected void initData()
    {
    }

    @Override
    public Object getSelectedRowObject()
    {
        return null;
    }

    @Override
    public void setSelectedRowObject(Object selectedObject)
    {
    }

    @Override
    public List getListData()
    {
        return null;
    }

    @Override
    public void setEditable(boolean editable)
    {
        this.editable = editable;
    }

    @Override
    public boolean isEditable()
    {
        return editable;
    }

    @Override
    public void setVisibleSelectButtons(boolean visible)
    {
    }

    public Mode getMode()
    {
        return mode;
    }

    public void setMode(Mode mode)
    {
        this.mode = mode;
        AbstractTablePanel tp = getTablePanel();
        tp.setVisible(mode.getButtons());
        setEditable(!Mode.AssembleSchemaSelect.equals(mode));
    }

    public AbstractTablePanel getTablePanel()
    {
        if(tablePanel == null)
        {
            //tablePanel = new 
        }

        return tablePanel;
    }
}
