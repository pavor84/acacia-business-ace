/*
 * SelectionCallbackPanel.java
 *
 * Created on Сряда, 2008, Октомври 8, 20:05
 */

package com.cosmos.acacia.crm.gui.assembling;

import com.cosmos.acacia.callback.assembling.ChoiceCallback;
import com.cosmos.acacia.crm.assembling.Algorithm;
import com.cosmos.acacia.crm.assembling.ConstraintRow;
import com.cosmos.acacia.crm.data.assembling.AssemblingMessage;
import com.cosmos.acacia.crm.data.assembling.AssemblingSchemaItem;
import com.cosmos.acacia.gui.AcaciaPanel;
import com.cosmos.swingb.JBButton;
import com.cosmos.swingb.JBPanel;
import java.awt.Component;
import java.awt.Graphics;
import java.util.List;
import javax.swing.ActionMap;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.SwingConstants;
import javax.swing.border.TitledBorder;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;

/**
 *
 * @author  Miro
 */
public class SelectionCallbackPanel
    extends AcaciaPanel
{
    private ChoiceCallback callback;

    /** Creates new form SelectionCallbackPanel */
    public SelectionCallbackPanel(ChoiceCallback callback)
    {
        this.callback = callback;
        initComponents();
        initData();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valuePanel = new com.cosmos.swingb.JBPanel();
        valueLabel = new com.cosmos.swingb.JBLabel();
        valueTextField = new com.cosmos.swingb.JBTextField();
        tablePanel = new com.cosmos.swingb.JBPanel();
        buttonPanel = new com.cosmos.swingb.JBPanel();
        selectButton = new com.cosmos.swingb.JBButton();
        cancelButton = new com.cosmos.swingb.JBButton();

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(SelectionCallbackPanel.class);
        valuePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("valuePanel.border.title"))); // NOI18N
        valuePanel.setName("valuePanel"); // NOI18N
        valuePanel.setLayout(new java.awt.BorderLayout());

        valueLabel.setText(resourceMap.getString("valueLabel.text")); // NOI18N
        valueLabel.setName("valueLabel"); // NOI18N
        valuePanel.add(valueLabel, java.awt.BorderLayout.WEST);

        valueTextField.setEditable(false);
        valueTextField.setName("valueTextField"); // NOI18N
        valuePanel.add(valueTextField, java.awt.BorderLayout.CENTER);

        add(valuePanel, java.awt.BorderLayout.PAGE_START);

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("tablePanel.border.title"))); // NOI18N
        tablePanel.setName("tablePanel"); // NOI18N
        tablePanel.setLayout(new java.awt.BorderLayout());
        add(tablePanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setName("buttonPanel"); // NOI18N
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getActionMap(SelectionCallbackPanel.class, this);
        selectButton.setAction(actionMap.get("selectButton")); // NOI18N
        selectButton.setName("selectButton"); // NOI18N
        buttonPanel.add(selectButton);

        cancelButton.setAction(actionMap.get("cancelButton")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        buttonPanel.add(cancelButton);

        add(buttonPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBPanel buttonPanel;
    private com.cosmos.swingb.JBButton cancelButton;
    private com.cosmos.swingb.JBButton selectButton;
    private com.cosmos.swingb.JBPanel tablePanel;
    private com.cosmos.swingb.JBLabel valueLabel;
    private com.cosmos.swingb.JBPanel valuePanel;
    private com.cosmos.swingb.JBTextField valueTextField;
    // End of variables declaration//GEN-END:variables


    @Override
    protected void initData()
    {
        AssemblingMessage message = getAssemblingMessage();
        String strValue;
        if((strValue = message.getMessageTitle()) != null)
        {
            setTitle(strValue);
        }

        if((strValue = message.getMessageText()) != null)
        {
            TitledBorder border = (TitledBorder)tablePanel.getBorder();
            border.setTitle(strValue);
        }

        if((strValue = message.getMessageLabel()) != null)
        {
            if(!strValue.trim().endsWith(":"))
            {
                strValue += ": ";
            }
            if(!strValue.endsWith(" "))
            {
                strValue += " ";
            }
            valueLabel.setText(strValue);
        }

        Algorithm.Type algorithmType = getAlgorithmType();
        if(!Algorithm.Type.ValueDependentAlgorithms.contains(algorithmType))
        {
            valuePanel.setEnabled(false);
        }
    }

    private AssemblingSchemaItem getAssemblingSchemaItem()
    {
        return callback.getAssemblingSchemaItem();
    }

    private Algorithm.Type getAlgorithmType()
    {
        return getAssemblingSchemaItem().getAlgorithmType();
    }
    

    private AssemblingMessage getAssemblingMessage()
    {
        return getAssemblingSchemaItem().getAssemblingMessage();
    }

    private Object getValueAgainstConstraints()
    {
        return callback.getValueAgainstConstraints();
    }

    private List<ConstraintRow> getChoices()
    {
        return callback.getChoices();
    }

    private int getDefaultChoice()
    {
        return callback.getDefaultChoice();
    }

    private void setSelectedRows(List<ConstraintRow> selectedRows)
    {
        callback.setSelectedRows(selectedRows);
    }

    private void setSelectedRow(ConstraintRow selectedRow)
    {
        callback.setSelectedRow(selectedRow);
    }

    @Action
    public void selectButton()
    {
    }

    @Action
    public void cancelButton()
    {
    }




}
