/*
 * ChangePasswordForm.java
 *
 * Created on 02 July 2008, 22:52
 */

package com.cosmos.acacia.crm.gui.users;

import com.cosmos.acacia.crm.bl.users.UsersRemote;
import com.cosmos.acacia.gui.AcaciaPanel;
import java.util.UUID;
import java.util.Arrays;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author  Bozhidar Bozhanov
 */
public class ChangePasswordForm extends AcaciaPanel {

    /** Creates new form ChangePasswordForm */
    public ChangePasswordForm(UUID parentId) {
        super(parentId);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordLabel = new com.cosmos.swingb.JBLabel();
        passwordLabel2 = new com.cosmos.swingb.JBLabel();
        oldPasswordLabel = new com.cosmos.swingb.JBLabel();
        oldPasswordField = new com.cosmos.swingb.JBPasswordField();
        newPasswordField = new com.cosmos.swingb.JBPasswordField();
        newPasswordField2 = new com.cosmos.swingb.JBPasswordField();
        changeButton = new com.cosmos.swingb.JBButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getResourceMap(ChangePasswordForm.class);
        passwordLabel.setText(resourceMap.getString("passwordLabel.text")); // NOI18N
        passwordLabel.setName("passwordLabel"); // NOI18N

        passwordLabel2.setText(resourceMap.getString("passwordLabel2.text")); // NOI18N
        passwordLabel2.setName("passwordLabel2"); // NOI18N

        oldPasswordLabel.setText(resourceMap.getString("oldPasswordLabel.text")); // NOI18N
        oldPasswordLabel.setName("oldPasswordLabel"); // NOI18N

        oldPasswordField.setText(resourceMap.getString("oldPasswordField.text")); // NOI18N
        oldPasswordField.setName("oldPasswordField"); // NOI18N

        newPasswordField.setText(resourceMap.getString("newPasswordField.text")); // NOI18N
        newPasswordField.setName("newPasswordField"); // NOI18N

        newPasswordField2.setText(resourceMap.getString("newPasswordField2.text")); // NOI18N
        newPasswordField2.setName("newPasswordField2"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.cosmos.acacia.crm.gui.AcaciaApplication.class).getContext().getActionMap(ChangePasswordForm.class, this);
        changeButton.setAction(actionMap.get("changePassword")); // NOI18N
        changeButton.setName("changeButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(oldPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newPasswordField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oldPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(oldPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.cosmos.swingb.JBButton changeButton;
    private com.cosmos.swingb.JBPasswordField newPasswordField;
    private com.cosmos.swingb.JBPasswordField newPasswordField2;
    private com.cosmos.swingb.JBPasswordField oldPasswordField;
    private com.cosmos.swingb.JBLabel oldPasswordLabel;
    private com.cosmos.swingb.JBLabel passwordLabel;
    private com.cosmos.swingb.JBLabel passwordLabel2;
    // End of variables declaration//GEN-END:variables

    private UsersRemote formSession;
    
    @Override
    protected void initData() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Action
    public void changePassword() {
        if (Arrays.equals(newPasswordField.getPassword(), newPasswordField2.getPassword())) {
            try {
                getFormSession().changePassword(oldPasswordField.getPassword(),                
                    newPasswordField.getPassword());
            
                JOptionPane.showMessageDialog(this, getResourceMap().getString("password.changed"));
                close();
            } catch (Exception ex) {
                handleBusinessException(ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, getResourceMap().getString("passwords.inconsistent"));
        }
    }

    public void setCurrentPassword(String password) {
        oldPasswordField.setText(password);
    }
    
    private UsersRemote getFormSession() {
        if (formSession == null) {
            try {
                formSession = getBean(UsersRemote.class);

            } catch(Exception ex) {
                ex.printStackTrace();
            }
        }
        return formSession;
    }
}
