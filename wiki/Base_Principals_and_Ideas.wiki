#summary One-sentence summary of this page.
#labels Featured

Base Principals and Ideas for the next version after the first working release

= Introduction =

When this first release with limited functionality is in production, the next release will be started. This next release will be the first release with all planed functionality. It will be maven based. All functionality will be separated in small modules (OSGi Bundles) as follow:
 * API Modules - the API and the implementation will be in different bundles
 * Implementation Modules
 * Persistence (Data Access Services) Modules
 * Services (Business Logic) Modules
 * GUI Modules - Eclipse RCP (or/and SwingX).

The Web Services will be the communication protocol between the Server and Client.
BPEL will be the connection language between the services.


= Details =

1. The [http://kenai.com/projects/acacia Server] and [http://kenai.com/projects/acacia-client Client] will be OSGi based using Enterprise OSGi and Distributed OSGi (RFC-119):
 * Client specification:
  * [https://bugs.eclipse.org/bugs/show_bug.cgi?id=272662 Universal and Distributed JWS Eclipse RCP Client]
  * [http://www.netbeans.org/issues/show_bug.cgi?id=162911 Universal and Distributed JWS OSGi Client based on NetBeans Platform]
  * [http://www.zkoss.org/ ZK Direct RIA, Open Source Ajax]
 Helpful projects:
  * [http://www.eclipse.org/proposals/riena/ Eclipse Riena Project]
  * [http://www.eclipse.org/ecf/ Eclipse Communication Framework Project]
  * [http://cxf.apache.org/dosgi-releases.html Apache CXF-DOSGi]
  * [http://newton.codecauldron.org/site/index.html Newton Framework]
  * [http://code.google.com/p/uface/ UFace] implements the [http://wiki.eclipse.org/index.php/JFace_Data_Binding JFace Data Binding] for GWT, gwt-ext, MyGWT, JFace, Swing and SwingX.
  * [http://www.c1-setcon.de/widgetserver/ WidgetServer] is a component based, server-side, Java/XML rich-client-framework which enables an application to run as either:
   * an application with a rich Web client based on AJAX (HTML, XML, CSS, Javascript);
   * an application with a simple Web client based on HTML and CSS;
   * a standalone application with a Swing GUI;
   * a client/server application with a thin Swing client;
   * or a mobile application on different devices like PDAs or Smartphones.
  * [http://cookxml.yuanheng.org/ CookXml] is a powerful general purpose dynamic XML data binding tool. It is designed to be easy to use and easily extensible. The current implementation only does the unmarshaling. The marshaling aspect will be added.
  * [http://www.swixml.org/ SwiXml], is a small GUI generating engine for Java applications and applets. Graphical User Interfaces are described in XML documents that are parsed at runtime and rendered into javax.swing objects.
  * The [http://sourceforge.net/projects/jxmlguibuilder/ Java-XML-GuiBuilder] creates on the basis of XML documents a runable Java swing surface. These tools are meant for the production by horizontal prototypes, the specification/documentation of the user's interface, the runtime to
  * [http://sourceforge.net/projects/xui/ XUI] is a Java and XML RIA platform for building smart app's. Swing, AWT and other widget sets can be used on a range of hardware. XUI's modular framework can help many aspects of application development. NetBeans and Eclipse are available.
  * [http://spring-rich-c.sourceforge.net/1.0.0/index.html Spring Rich Client Project] (Spring-RCP) mission is to provide an elegant way to build highly-configurable, GUI-standards-following rich-client applications faster by leveraging the Spring Framework, and a rich library of UI factories and support classes.
  * [http://creamtec.com/products/ajaxswing/ AjaxSwing] automatically converts Java Swing and AWT applications into AJAX websites at runtime.
  * [http://www.javafx.com/ JavaFX]

 * Server specification


2. Program model
 * Data Types definitions
 * Entity definitions
 * Forms: Entity, Entity List, Customization, Relations
 * Form modes: read only, update, create, delete
The reference implementation will be hosted in [http://kenai.com/projects/acacia-business-ace Kenai project space]

3. GUI based Rich Form Development. The forms will be dynamically generated from both Java annotations or Database. The customization of the system and standard/integrated forms also will be GUI based. The primary GUI will be Swing or/and SWT based. As alternative Ajax Web Client will be provided.

4. ERP module

5. CRM module

6. HR Management module

7. e-Commerce module

8. Useful links:
 * [http://www.orangehrm.com/ OrangeHRM - Open Source HR Management]
 * [http://www.xtuple.org/ xTuple ERP - open source ERP, accounting, CRM package for small to midsized businesses.]